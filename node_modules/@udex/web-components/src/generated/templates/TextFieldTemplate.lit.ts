/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import type UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
	import type TextField from "../../TextField.js";
	import type { ClassMapValue } from "@ui5/webcomponents-base/dist/types.js";
	
function block0 (this: TextField, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<div class="udex-text-field__container">${ this.label ? block1.call(this, context, tags, suffix) : undefined }<input id="input" class="udex-text-field__input" type="text" .value="${ifDefined(this.value)}" @input="${this.handleInput}" @focus="${this.handleFocus}" @blur="${this.handleBlur}" @keydown="${this.handleKeyDown}" maxlength="${ifDefined(this.maxlength)}" ?disabled="${this.disabled}" ?readonly="${this.isInputReadonly}" ?required="${this.required}" dir="${ifDefined(this.dirValue)}" aria-required="${ifDefined(this.required)}" aria-readonly="${ifDefined(this.isInputReadonly)}" aria-disabled="${ifDefined(this.disabled)}" />${ this.supportingText ? block3.call(this, context, tags, suffix) : undefined }</div>`;}
function block1 (this: TextField, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<label for="input" class="${ifDefined(this.labelClasses)}">${ifDefined(this.label)}${ this.required ? block2.call(this, context, tags, suffix) : undefined }</label>`;}
function block2 (this: TextField, context: UI5Element, tags: string[], suffix: string | undefined) { return html` * `;}
function block3 (this: TextField, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<span class="udex-text-field__supporting-text">${ifDefined(this.supportingText)}</span>`;}


export default block0;