/* eslint no-unused-vars: 0 */
import { html, svg, repeat, classMap, styleMap, ifDefined, unsafeHTML, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import type UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
	import type SearchSuggestions from "../../SearchSuggestions.js";
	import type { ClassMapValue } from "@ui5/webcomponents-base/dist/types.js";
	
function block0 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined) { return suffix ? html`<${scopeTag("ui5-popover", tags, suffix)} class="udex-search-suggestions__root ${ifDefined(this.homeSearchPopoverClass)}" hide-arrow _disable-initial-focus placement-type="Bottom" horizontal-align="Right" style="${styleMap(this.popoverStyles)}" id="suggestions-popover" aria-orientation="vertical">${ this.hasPopoverContent ? block1.call(this, context, tags, suffix) : undefined }</${scopeTag("ui5-popover", tags, suffix)}>` : html`<ui5-popover class="udex-search-suggestions__root ${ifDefined(this.homeSearchPopoverClass)}" hide-arrow _disable-initial-focus placement-type="Bottom" horizontal-align="Right" style="${styleMap(this.popoverStyles)}" id="suggestions-popover" aria-orientation="vertical">${ this.hasPopoverContent ? block1.call(this, context, tags, suffix) : undefined }</ui5-popover>`;}
function block1 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<div role="tree">${ this.isShowSuggestedList ? block2.call(this, context, tags, suffix) : undefined }${ this.isShowRecommendedList ? block4.call(this, context, tags, suffix) : undefined }</div>`;}
function block2 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<div class="udex-search-suggestions__block"><span class="udex-search-suggestions__heading">${ifDefined(this.suggestedHeading)}</span><ul class="udex-search-suggestions__list" role="group">${ repeat(this.suggestedList, (item, index) => (item as typeof item & {_id?: any})._id || index, (item, index: number) => block3.call(this, context, tags, suffix, item, index)) }</ul></div>`;}
function block3 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined, item: any, index: number) { return suffix ? html`<li class="udex-search-suggestions__item" role="treeitem"><${scopeTag("ui5-button", tags, suffix)} icon="search" type="Button" design="Default" class="udex-search-suggestions__item-button" title="${ifDefined(item.text)}" @click="${item.handleSelectItem}" @keydown="${this.handleKeyDown}">${unsafeHTML(item.text)}</${scopeTag("ui5-button", tags, suffix)}></li>` : html`<li class="udex-search-suggestions__item" role="treeitem"><ui5-button icon="search" type="Button" design="Default" class="udex-search-suggestions__item-button" title="${ifDefined(item.text)}" @click="${item.handleSelectItem}" @keydown="${this.handleKeyDown}">${unsafeHTML(item.text)}</ui5-button></li>`;}
function block4 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined) { return html`<div class="udex-search-suggestions__block"><span class="udex-search-suggestions__heading">${ifDefined(this.recommendedHeading)}</span><ul class="udex-search-suggestions__list" role="group">${ repeat(this.recommendedList, (item, index) => (item as typeof item & {_id?: any})._id || index, (item, index: number) => block5.call(this, context, tags, suffix, item, index)) }</ul></div>`;}
function block5 (this: SearchSuggestions, context: UI5Element, tags: string[], suffix: string | undefined, item: any, index: number) { return suffix ? html`<li class="udex-search-suggestions__item" role="treeitem"><${scopeTag("ui5-button", tags, suffix)} type="Button" design="Default" class="udex-search-suggestions__item-button" title="${ifDefined(item.text)}" @click="${item.handleSelectItem}" @keydown="${this.handleKeyDown}">${unsafeHTML(item.text)}</${scopeTag("ui5-button", tags, suffix)}></li>` : html`<li class="udex-search-suggestions__item" role="treeitem"><ui5-button type="Button" design="Default" class="udex-search-suggestions__item-button" title="${ifDefined(item.text)}" @click="${item.handleSelectItem}" @keydown="${this.handleKeyDown}">${unsafeHTML(item.text)}</ui5-button></li>`;}


export default block0;