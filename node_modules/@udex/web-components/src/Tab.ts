import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import executeTemplate from "@ui5/webcomponents-base/dist/renderer/executeTemplate.js";
import TabNavigation from "./TabNavigation.js";

import TabTemplate from "./generated/templates/TabTemplate.lit.js";
import TabHeaderTemplate from "./generated/templates/TabHeaderTemplate.lit.js";
import TabInOverflowTemplate from "./generated/templates/TabInOverflowTemplate.lit.js";

// Styles
import TabInOverflowCss from "./generated/themes/TabInOverflow.css.js";

enum Target {
  Blank = "_blank",
  Parent = "_parent",
  Self = "_self",
  Top = "_top",
}

interface ITab extends UI5Element {
  getTabInHeaderDomRef: () => ITab | null;
  disabled?: boolean;
  icon?: string;
  selected?: boolean;
  text?: string;
  showAttentionBadge?: boolean;
  href?: string;
  content?: Array<Node>;
  hasIcon: boolean;
  isOnSelectedTab: boolean;
  hasNotIcon: boolean;
  hasNotHref: boolean;
  isSelected: boolean;
  selectedClass: string;
  tabNavigation: any;
  _individualSlot: string;
  _effectiveSlotName: string;
  _slotName: string;
  _selected?: boolean;
  _tabIndex: string;
  _posinset?: number;
  _setsize?: number;
  _contentId?: string;
  getElementInHeader?: () => ITab | null;
  _realTab?: Tab;
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tab</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tab.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tab
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tab
 * @public
 */
@customElement({
  tag: "udex-tab",
  renderer: litRender,
  template: TabTemplate,
  dependencies: [],
})

class Tab extends UI5Element implements ITab {
  /**
   * Defines the text of tab.
   * @name udex.components.Tab.prototype.text
   * @public
   * @type { sap.ui.webc.base.types.string }
   */
  @property({ type: String })
    text!: string;

  /**
   * Defines the selected tab.
   * @name udex.components.Tab.prototype.selected
   * @public
   * @type { sap.ui.webc.base.types.boolean }
   * @defaultValue "false"
   */
  @property({ type: Boolean })
    selected!: boolean;

  /**
   * Defines the displaying attention badge.
   * @name udex.components.Tab.prototype.showAttentionBadge
   * @public
   * @type { sap.ui.webc.base.types.boolean }
   * @defaultValue "false"
   */
  @property({ type: Boolean })
    showAttentionBadge!: boolean;

  /**
   * Defines the icon in the tab.
   * @name udex.components.Tab.prototype.icon
   * @public
   * @type { sap.ui.webc.base.types.string }
   */
  @property({ type: String })
    icon!: string;

  /**
   * Defines the href of the tab.
   * @name udex.components.Tab.prototype.href
   * @public
   * @type { sap.ui.webc.base.types.string }
   */
  @property({ type: String })
    href!: string;

  /**
   * Define the target of the tab
   * @name udex.components.Tab.property.target
   * @public@type { sap.ui.webc.base.types.string }
   */
  @property({ type: Target, defaultValue: "_self" })
    target!: "_blank" | "_parent" | "_self" | "_top";

  /**
   * Defines the tab.
   * @private
   * @type { Object }
   */
  @property({ type: Object })
    _realTab!: Tab;

  /**
   * Defines the selected tab for private use.
   * @private
   * @type { boolean }
   * @defaultValue "false"
   */
  @property({ type: Boolean })
    _selected!: boolean;

  /**
   * Defines the tabindex of the tab.
   * @private
   * @type { boolean }
   * @defaultValue "false"
   */
  @property({ type: String })
    _tabIndex!: string;

  /**
   * Defines the content of the tab.
   * @type { HTMLElement[] }
   * @name sap.ui.webc.main.Tab.prototype.default
   * @slot content
   * @public
   */
  @slot({ type: Node, "default": true })
    content!: Array<Node>;

  getElementInHeader?: () => ITab | null;
  _individualSlot!: string;

  getTabInHeaderDomRef(): ITab | null {
    if (this.getElementInHeader) {
      return this.getElementInHeader();
    }

    return null;
  }

  get isOnSelectedTab(): boolean {
    return this._realTab === this;
  }

  get _effectiveSlotName() {
    return this.isOnSelectedTab ? this._individualSlot : `disabled-${this._individualSlot}`;
  }

  get hasIcon(): boolean {
    return !!this.icon;
  }

  get classWithIcon(): string {
    return this.hasIcon ? "udex-tab-navigation__button-text--icon" : "";
  }

  get hasNotIcon(): boolean {
    return !this.icon && this.showAttentionBadge;
  }

  get hasNotHref(): boolean {
    return !this.href;
  }

  get isSelected() {
    return this.selected || this._selected;
  }

  get selectedClass(): string {
    return this.isSelected ? "udex-tab-navigation__button-tab--active" : "";
  }

  get tabNavigation() {
    return executeTemplate(Tab.headerTemplate, this);
  }

  get tabInOverflow() {
    return executeTemplate(Tab.overflowTemplate, this);
  }

  get _slotName() {
    return this.isOnSelectedTab ? this._individualSlot : `disabled-${this._individualSlot}`;
  }

  get textValidated(): string {
    return this.text.length > 25 ? this.text.slice(0, 25) : this.text;
  }

  get effectiveSelected() {
    return this.selected || this._selected;
  }

  get ariaLabelledBy() {
    const labels = [];

    if (this.text) {
      labels.push(`${this.__id!}-text`);
    }

    if (this.icon) {
      labels.push(`${this.__id!}-icon`);
    }

    return labels.join(" ");
  }

  static get headerTemplate() {
    return TabHeaderTemplate;
  }

  static get overflowTemplate() {
    return TabInOverflowTemplate;
  }
}

Tab.define();

TabNavigation.registerStaticAreaTabStyles(TabInOverflowCss);

export default Tab;
export { ITab };
