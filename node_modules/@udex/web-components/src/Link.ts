import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/Link.js";

import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import LinkTemplate from "./generated/templates/LinkTemplate.lit.js";

// Styles
import LinkCss from "./generated/themes/Link.css.js";
import redirectAttributes from "./utils/redirectAttributes.js";

enum IconPlacement {
  start = "start",
  end = "end"
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-link</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Link.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Link
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-link
 * @public
 */
@customElement({
  tag: "udex-link",
  renderer: litRender,
  styles: LinkCss,
  template: LinkTemplate,
  dependencies: [],
})

class Link extends UI5Element {
    /**
     * Used as the label for background image.
     *
     * @type {string}
     * @name sap.ui.webc.web-components.Link.prototype.icon
     * @public
    */
    @property({ type: String })
      icon?: string;

    /**
     * Used as the label for background image.
     *
     * @type {IconPlacement}
     * @name sap.ui.webc.web-components.Link.prototype.icon
     * @public
     * @defaultValue "end"
    */
    @property({ type: IconPlacement, defaultValue: IconPlacement.end })
      iconPlacement?: IconPlacement;

    /**
     * Defines the label of the component.
     * <br><br>
     * <b>Note:</b> Provide an "icon"-slot and an empty label to create an icon-only button.
     * @type {Node}
     * @name sap.ui.webc.udex.Link.prototype.default
     * @defaultvalue undefined
     * @public
    */
    @slot({ type: Node }) default!: Node;

    get startIcon() {
      return this.icon && this.iconPlacement === IconPlacement.start;
    }

    get endIcon() {
      return this.icon && this.iconPlacement === IconPlacement.end;
    }

    get linkClass() {
      return this.icon ? "udex-link udex-link--with-icon" : "udex-link";
    }

    onAfterRendering() {
      redirectAttributes(this, "udex-link");
    }
}

Link.define();

export default Link;
