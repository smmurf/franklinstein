import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/Dialog.js";

// Template
import ModalTemplate from "./generated/templates/ModalTemplate.lit.js";

// Styles
import ModalCss from "./generated/themes/Modal.css.js";
import redirectAttributes from "./utils/redirectAttributes.js";

enum ModalType {
  default = "default",
  basic = "basic"
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>udex-modal</code> component is a demo component that displays some text.
 *
 * @constructor
 * @alias modal.components.Modal
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-modal
 * @public
 */
@customElement({
  tag: "udex-modal",
  renderer: litRender,
  styles: ModalCss,
  template: ModalTemplate,
})
class Modal extends UI5Element {
  /**
  * Defines the content of the Popup.
  * @type {HTMLElement[]}
  * @name sap.ui.webc.main.Popup.prototype.default
  * @slot content
  * @public
  */
  @slot({ type: HTMLElement, "default": true })
    content!: Array<HTMLElement>;

  /**
  * Defines the header HTML Element.
  *
  * @type {HTMLElement[]}
  * @name sap.ui.webc.main.Dialog.prototype.header
  * @slot
  * @public
  */
  @slot()
    header!: Array<HTMLElement>;

  /**
  * Defines the footer HTML Element.
  *
  * @type {HTMLElement[]}
  * @name sap.ui.webc.main.Dialog.prototype.footer
  * @slot
  * @public
  */
  @slot()
    footer!: Array<HTMLElement>;

  /**
  * Defines modal display type
  * <br><br>
  * <b>Note:</b> The <code>basic</code> type is simplified version of styling.
  *
  * @name udex.components.Modal.prototype.type
  * @public
  * @type { ModalType }
  * @defaultValue "default"
  */
  @property({ defaultValue: ModalType.default })
    type!: ModalType;

  /**
  * Indicates if the element is open
  * @public
  * @type {boolean}
  * @name udex.components.Modal.prototype.open
  * @defaultvalue false
  * @since 1.2.0
  */
  @property({ type: Boolean })
    open!: boolean;

  get headerSlot(): boolean {
    return !!this.header.length;
  }

  get footerSlot(): boolean {
    return !!this.footer.length;
  }

  onAfterRendering() {
    redirectAttributes(this, "modal");
  }
}

Modal.define();

export default Modal;
