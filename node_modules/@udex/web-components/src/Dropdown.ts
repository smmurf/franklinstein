import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import Popover from "@ui5/webcomponents/dist/Popover.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import browserScrollbarCSS from "@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js";
import DropdownTemplate from "./generated/templates/DropdownTemplate.lit.js";

// Styles
import DropdownCss from "./generated/themes/Dropdown.css";

enum PlacementType {
  Left = "Left",
  Right = "Right",
  Top = "Top",
  Bottom = "Bottom",
}

export enum HorizontalAlign {
  Center = "Center",
  Left = "Left",
  Right = "Right",
  Stretch = "Stretch",
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-dropdown</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Dropdown.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Dropdown
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-dropdown
 * @public
 */
@customElement({
  tag: "udex-dropdown",
  renderer: litRender,
  styles: [
    DropdownCss,
    browserScrollbarCSS,
  ],
  template: DropdownTemplate,
  dependencies: [Popover],
})

/**
 * Fired event when the user clicks the trigger.
 *
 * @event sap.ui.webc.web-components.Dropdown#clickTrigger
 * @public
 */
@event("click-trigger")

/**
 * Fired before the dropdown is opened.
 *
 * @event sap.ui.webc.web-components.Dropdown#beforeOpen
 * @public
 */
@event("before-open")

/**
 * Fired after the dropdown is opened.
 *
 * @event sap.ui.webc.web-components.Dropdown#afterOpen
 * @public
 */
@event("after-open")

/**
 * Fired before the menu is closed.
 *
 * @event sap.ui.webc.web-components.Dropdown#beforeClose
 * @public
 */
@event("before-close")

/**
 * Fired after the menu is closed.
 *
 * @event sap.ui.webc.web-components.Dropdown#afterClose
 * @public
 */
@event("after-close")
class Dropdown extends UI5Element {
  /**
   * Determines on which side the component is placed at.
   *
   * @name sap.ui.webc.web-components.Dropdown.prototype.placementType
   * @defaultvalue "Bottom"
   * @public
   */
  @property({ type: PlacementType, defaultValue: PlacementType.Bottom })
  placementType!: `${PlacementType}`;

  /**
   * Determines the horizontal alignment of the component.
   *
   * @name sap.ui.webc.web-components.Dropdown.prototype.horizontalAlign
   * @defaultvalue "Left"
   * @public
   */
  @property({ type: HorizontalAlign, defaultValue: HorizontalAlign.Left })
  horizontalAlign!: `${HorizontalAlign}`;

  /**
   * Defines the content of the Dropdown.
   * @type {HTMLElement[]}
   * @name sap.ui.webc.web-components.Dropdown.prototype.default
   * @slot content
   * @public
   */
  @slot({ type: HTMLElement, "default": true })
  content!: Array<HTMLElement>;

  /**
   * Defines the header HTML Element.
   *
   * @type {HTMLElement[]}
   * @name sap.ui.webc.web-components.Dropdown.prototype.header
   * @slot
   * @public
   */
  @slot({ type: HTMLElement })
  header!: Array<HTMLElement>;

  /**
   * Defines the footer HTML Element.
   *
   * @type {HTMLElement[]}
   * @name sap.ui.webc.web-components.Dropdown.prototype.footer
   * @slot
   * @public
   */
  @slot({ type: HTMLElement })
  footer!: Array<HTMLElement>;

  /**
   * Defines the trigger HTML Element.
   *
   * @type {HTMLElement[]}
   * @name sap.ui.webc.web-components.Dropdown.prototype.trigger
   * @slot
   * @public
   */
  @slot({ type: HTMLElement })
  trigger!: Array<HTMLElement>;

  /**
   * Indicates if the dropdown pane is open
   * @public
   * @type {boolean}
   * @name sap.ui.web-components.Dropdown.prototype.open
   * @defaultvalue false
   */
  @property({ type: Boolean })
  open!: boolean;

  /**
   * Allows control over the width.
   * @type {string}
   * @name sap.ui.web-components.Dropdown.prototype.width
   * @public
   */
  @property({ type: String })
  width?: string;

  getDropdownPane() {
    return this.shadowRoot!.querySelector<Popover>("[ui5-popover]")!;
  }

  getTrigger() {
    return this.querySelector<HTMLElement>("[slot=trigger]")!;
  }

  onTriggerClick() {
    const dropdown = this.getDropdownPane();
    const opener = this.getTrigger();
    dropdown.showAt(opener);
    this.fireEvent("click-trigger");
  }

  onOpen(opener: HTMLElement): void {
    const dropdown = this.getDropdownPane();
    dropdown.showAt(opener);
  }

  onClose():void {
    const dropdown = this.getDropdownPane();
    dropdown.close(true);
  }

  get hasTriggerSlot(): boolean {
    return !!this.trigger.length;
  }

  get hasHeaderSlot(): boolean {
    return !!this.header.length;
  }

  get hasFooterSlot(): boolean {
    return !!this.footer.length;
  }

  afterDropdownClose() {
    this.open = false;
    this.fireEvent("after-close");
  }

  afterDropdownOpen() {
    this.open = true;
    this.fireEvent("after-open");
  }

  beforeDropdownOpen() {
    this.fireEvent("before-open");
  }

  beforeDropdownClose() {
    this.fireEvent("before-close");
  }

  get holderWeight() {
    return this.width ? this.width : "auto";
  }
}

Dropdown.define();

export default Dropdown;
