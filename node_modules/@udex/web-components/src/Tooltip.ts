import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import ResponsivePopover from "@ui5/webcomponents/dist/ResponsivePopover.js";

// Template
import TooltipTemplate from "./generated/templates/TooltipTemplate.lit.js";

// Styles
import TooltipCss from "./generated/themes/Tooltip.css";

enum PlacementType {
  Left = "Left",
  Right = "Right",
  Top = "Top",
  Bottom = "Bottom",
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tooltip</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tooltip.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tooltip
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tooltip
 * @public
 */
@customElement({
  tag: "udex-tooltip",
  renderer: litRender,
  styles: TooltipCss,
  template: TooltipTemplate,
  dependencies: [ResponsivePopover],
})
class Tooltip extends UI5Element {
  /**
   * Defines the content of the component.
   *
   * @type {Node}
   * @name sap.ui.webc.web-components.Tooltip.prototype.default
   * @slot
   * @public
   */
  @slot({ type: Node }) default!: Node;

  /**
   * Defines the Tooltip title.
   *
   * @type {string}
   * @name udex.components.Tooltip.prototype.title
   * @defaultvalue ""
   * @public
   */
  @property({ type: String, defaultValue: "" }) title!: string;

  /**
   * Defines if Tooltip has an arrow or not.
   *
   * @type {boolean}
   * @name udex.components.Tooltip.prototype.hideArrow
   * @defaultValue false
   * @public
   */
  @property({ type: Boolean })
  hideArrow!: boolean;

  /**
   * Determines on which side of the component the Tooltip is displayed.
   *
   * @name udex.components.Tooltip.prototype.placement
   * @defaultvalue "Right"
   * @public
   */
  @property({ type: PlacementType, defaultValue: PlacementType.Right })
  placement!: `${PlacementType}`;

  getPopover() {
    return this.shadowRoot!.querySelector<ResponsivePopover>(
      "[ui5-responsive-popover]",
    )!;
  }

  onOpen(opener: HTMLElement): void {
    const popover = this.getPopover();
    popover.showAt(opener);
  }

  onClose(): void {
    const popover = this.getPopover();
    popover.close(true);
  }
}

Tooltip.define();

export default Tooltip;
