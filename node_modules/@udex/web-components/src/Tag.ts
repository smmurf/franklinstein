import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/Icon.js";

import TagTemplate from "./generated/templates/TagTemplate.lit.js";

// Styles
import TagCss from "./generated/themes/Tag.css.js";

enum TagType {
    Text = "Text",
    White = "White",
    Outlined = "Outlined",
    Grey = "Grey"
}

enum IconPlacement {
    Start = "Start",
    End = "End"
}

/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tag</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tag.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tag
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tag
 * @public
 */
@customElement({
  tag: "udex-tag",
  renderer: litRender,
  styles: TagCss,
  template: TagTemplate,
  dependencies: [],
})

/**
 * Emitted when tag was clicked
 *
 * @event sap.ui.webc.web-components.Tag#click
 * @public
 */
@event("selectionChange")
/**
 * Emitted when icon in tag was clicked
 *
 * @event sap.ui.webc.web-components.Tag#iconClick
 * @public
 */
@event("iconClick")
class Tag extends UI5Element {
  /**
   * Defines the text of the tag
  *
  * @type {string}
  * @name sap.ui.webc.web-components.Tag.prototype.text
  * @defaultvalue ""
  * @public
  */
  @property()
    text!: string;

  /**
   * Defines the design type of tag
  *
  * @type {TagType}
  * @name sap.ui.webc.web-components.Tag.prototype.design
  * @defaultvalue TagType.Grey
  * @public
  */
  @property({ type: TagType, defaultValue: TagType.Grey })
    design?: TagType;

  /**
   * Defines icon name
  *
  * @type {string}
  * @name sap.ui.webc.web-components.Tag.prototype.icon
  * @defaultvalue ""
  * @public
  */
  @property()
    icon!: string;

  /**
   * Defines icon placement if icon was provided
  *
  * @type {IconPlacement}
  * @name sap.ui.webc.web-components.Tag.prototype.iconPlacement
  * @defaultvalue IconPlacement.End
  * @public
  */
  @property({ type: IconPlacement, defaultValue: IconPlacement.End })
    iconPlacement? : IconPlacement;

  /**
   * Defines if tag is in readnly state
  *
  * @type {boolean}
  * @name sap.ui.webc.web-components.Tag.prototype.readOnly
  * @defaultvalue false
  * @public
  */
  @property({ type: Boolean, defaultValue: false })
    readOnly!: boolean;

  /**
   * Defines the role attribute of component
  *
  * @type {string}
  * @name sap.ui.webc.web-components.Tag.prototype.accessibleRole
  * @defaultvalue "option"
  * @public
  */
  @property()
    accessibleRole!: string;

  /**
   * Defines if tag is selected
  *
  * @type {boolean}
  * @name sap.ui.webc.web-components.Tag.prototype.text
  * @defaultValue false
  */
  @property({ type: Boolean })
    _selected = false;

  get tagClasses() {
    return `udex-tag udex-tag-${this.design?.toLowerCase()}
    ${this.readOnly ? "udex-tag--readonly" : ""}
    ${this._selected ? "udex-tag--selected" : ""}`;
  }

  get startIcon() {
    return this.icon && !this.readOnly && this.iconPlacement === IconPlacement.Start;
  }

  get endIcon() {
    return this.icon && !this.readOnly && this.iconPlacement === IconPlacement.End;
  }

  setSelected() {
    this._selected = !this._selected;
  }

  iconClickHandler(e: Event) {
    e.stopPropagation();
    if (!this.readOnly) {
      this.fireEvent("iconClick");
    }
  }

  tagClickHandler() {
    if (!this.readOnly) {
      this.setSelected();
      this.fireEvent("selectionChange");
    }
  }
}

Tag.define();

export default Tag;
