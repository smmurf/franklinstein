var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/Icon.js";
import TagTemplate from "./generated/templates/TagTemplate.lit.js";
// Styles
import TagCss from "./generated/themes/Tag.css.js";
var TagType;
(function (TagType) {
    TagType["Text"] = "Text";
    TagType["White"] = "White";
    TagType["Outlined"] = "Outlined";
    TagType["Grey"] = "Grey";
})(TagType || (TagType = {}));
var IconPlacement;
(function (IconPlacement) {
    IconPlacement["Start"] = "Start";
    IconPlacement["End"] = "End";
})(IconPlacement || (IconPlacement = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tag</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tag.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tag
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tag
 * @public
 */
let Tag = class Tag extends UI5Element {
    constructor() {
        super(...arguments);
        /**
         * Defines if tag is selected
        *
        * @type {boolean}
        * @name sap.ui.webc.web-components.Tag.prototype.text
        * @defaultValue false
        */
        this._selected = false;
    }
    get tagClasses() {
        return `udex-tag udex-tag-${this.design?.toLowerCase()}
    ${this.readOnly ? "udex-tag--readonly" : ""}
    ${this._selected ? "udex-tag--selected" : ""}`;
    }
    get startIcon() {
        return this.icon && !this.readOnly && this.iconPlacement === IconPlacement.Start;
    }
    get endIcon() {
        return this.icon && !this.readOnly && this.iconPlacement === IconPlacement.End;
    }
    setSelected() {
        this._selected = !this._selected;
    }
    iconClickHandler(e) {
        e.stopPropagation();
        if (!this.readOnly) {
            this.fireEvent("iconClick");
        }
    }
    tagClickHandler() {
        if (!this.readOnly) {
            this.setSelected();
            this.fireEvent("selectionChange");
        }
    }
};
__decorate([
    property()
], Tag.prototype, "text", void 0);
__decorate([
    property({ type: TagType, defaultValue: TagType.Grey })
], Tag.prototype, "design", void 0);
__decorate([
    property()
], Tag.prototype, "icon", void 0);
__decorate([
    property({ type: IconPlacement, defaultValue: IconPlacement.End })
], Tag.prototype, "iconPlacement", void 0);
__decorate([
    property({ type: Boolean, defaultValue: false })
], Tag.prototype, "readOnly", void 0);
__decorate([
    property()
], Tag.prototype, "accessibleRole", void 0);
__decorate([
    property({ type: Boolean })
], Tag.prototype, "_selected", void 0);
Tag = __decorate([
    customElement({
        tag: "udex-tag",
        renderer: litRender,
        styles: TagCss,
        template: TagTemplate,
        dependencies: [],
    })
    /**
     * Emitted when tag was clicked
     *
     * @event sap.ui.webc.web-components.Tag#click
     * @public
     */
    ,
    event("selectionChange")
    /**
     * Emitted when icon in tag was clicked
     *
     * @event sap.ui.webc.web-components.Tag#iconClick
     * @public
     */
    ,
    event("iconClick")
], Tag);
Tag.define();
export default Tag;
//# sourceMappingURL=Tag.js.map