{"version":3,"file":"TextField.js","sourceRoot":"","sources":["../src/TextField.ts"],"names":[],"mappings":"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","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport Integer from \"@ui5/webcomponents-base/dist/types/Integer.js\";\n\n// Template\nimport TextFieldTemplate from \"./generated/templates/TextFieldTemplate.lit\";\n\n// Styles\nimport TextFieldCss from \"./generated/themes/TextField.css.js\";\n\nenum ValueState {\n  Standard = \"Standard\",\n  Warning = \"Warning\",\n  Error = \"Error\",\n  Success = \"Success\",\n}\n\n/**\n * @class\n *\n * @constructor\n * @alias udex.components.TextField\n * @extends sap.ui.webc.base.UI5Element\n * @tagname udex-text-field\n * @public\n */\n@customElement({\n  tag: \"udex-text-field\",\n  renderer: litRender,\n  styles: TextFieldCss,\n  template: TextFieldTemplate,\n})\nclass TextField extends UI5Element {\n  _labelActiveClassName = \"udex-text-field__label--active\";\n\n  /**\n   * Defines whether the component is in disabled state.\n   * <br><br>\n   * <b>Note:</b> A disabled component is completely noninteractive.\n   *\n   * @type {boolean}\n   * @name sap.ui.webc.udex.TextField.prototype.disabled\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    disabled!: boolean;\n\n  /**\n   * Defines the value of the component.\n   * <br><br>\n   * <b>Note:</b> The property is updated upon typing.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.TextField.prototype.value\n   * @defaultvalue \"\"\n   * @formEvents input\n   * @formProperty\n   * @public\n   */\n  @property({ type: String })\n    value!: string;\n\n  /**\n   * Sets the maximum number of characters available in the input field.\n   * <br><br>\n   * <b>Note:</b> This property is not compatible with the ui5-input type InputType.Number. If the ui5-input type is set to Number, the maxlength value is ignored.\n   * @type {sap.ui.webc.base.types.Integer}\n   * @name sap.ui.webc.udex.TextField.prototype.maxlength\n   * @public\n   */\n  @property({ validator: Integer })\n    maxlength?: number;\n\n  /**\n   * Defines label text for the input field.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.TextField.prototype.label\n   * @defaultvalue \"\"\n   * @public\n   */\n  @property({ type: String })\n    label!: string;\n\n  /**\n   * Defines whether the component is read-only.\n   * <br><br>\n   * <b>Note:</b> A read-only component is not editable,\n   * but still provides visual feedback upon user interaction.\n   *\n   * @type {boolean}\n   * @name sap.ui.webc.udex.TextField.prototype.readonly\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    readonly!: boolean;\n\n  /**\n   * Defines whether the component is display-only.\n   * <br><br>\n   * <b>Note:</b> A display-only component is not editable,\n   * but still provides visual feedback upon user interaction, input border is not visible.\n   *\n   * @type {boolean}\n   * @name sap.ui.webc.udex.TextField.prototype.displayonly\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    displayonly!: boolean;\n\n  /**\n   * Defines whether the component is required.\n   *\n   * @type {boolean}\n   * @name sap.ui.webc.udex.TextField.prototype.required\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    required!: boolean;\n\n  /**\n   * Defines the value state of the component.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.TextField.prototype.valueState\n   * @defaultvalue \"Standard\"\n   * @public\n   */\n  @property({ type: ValueState, defaultValue: \"Standard\" })\n    valueState!: \"Standard\" | \"Warning\" | \"Error\" | \"Success\";\n\n  /**\n   * Defines direction of the input.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.TextField.prototype.direction\n   * @defaultvalue \"left\"\n   * @public\n   */\n  @property({ type: String, defaultValue: \"left\" })\n    direction?: \"left\" | \"right\";\n\n  /**\n   * Defines supporting text under the input field.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.TextField.prototype.supportingText\n   * @defaultvalue \"\"\n   * @public\n   */\n  @property({ type: String })\n    supportingText!: string;\n\n  /**\n   * Defines the inner stored class of the label.\n   *\n   * @type {string}\n   * @defaultvalue \"\"\n   * @private\n   */\n  @property({ type: String, noAttribute: true, defaultValue: \"\" })\n    labelActiveClass!: string;\n\n  /**\n   * Defines the inner stored value of the dir attribute of the input.\n   *\n   * @type {string}\n   * @defaultvalue \"ltr\"\n   * @private\n   */\n  @property({ type: String, noAttribute: true, defaultValue: \"ltr\" })\n    dirValue!: string;\n\n  /**\n   * Defines the inner stored value of the readonly attribute of the input.\n   *\n   * @type {boolean}\n   * @defaultvalue false\n   * @private\n   */\n  @property({ type: Boolean, noAttribute: true, defaultValue: false })\n    isInputReadonly!: boolean;\n\n  /**\n   * Defines the inner stored value of the classes of the label.\n   *\n   * @type {string}\n   * @defaultvalue \"\"\n   * @private\n   */\n  @property({ type: String, noAttribute: true, defaultValue: \"\" })\n    labelClasses!: string;\n\n  handleInput = (event: InputEvent) => {\n    this.value = (event.target as HTMLInputElement)?.value;\n  };\n\n  handleFocus = () => {\n    if (!this.disabled && !this.readonly && !this.displayonly) {\n      this.labelActiveClass = this._labelActiveClassName;\n    }\n  };\n\n  handleBlur = () => {\n    if (this.value) {\n      this.labelActiveClass = this._labelActiveClassName;\n    } else {\n      this.labelActiveClass = \"\";\n    }\n  };\n\n  handleKeyDown = (event: KeyboardEvent) => {\n    event.stopPropagation();\n  };\n\n  onBeforeRendering() {\n    if (this.value && this.labelActiveClass === \"\") {\n      this.labelActiveClass = this._labelActiveClassName;\n    }\n\n    if (this.direction === \"left\") {\n      this.dirValue = \"ltr\";\n    } else if (this.direction === \"right\") {\n      this.dirValue = \"rtl\";\n    }\n\n    this.isInputReadonly = this.readonly || this.displayonly;\n\n    this.labelClasses = `udex-text-field__label ${this.labelActiveClass}`;\n  }\n}\n\nTextField.define();\n\nexport default TextField;\n"]}