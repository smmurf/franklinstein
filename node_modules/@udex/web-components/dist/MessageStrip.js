var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var MessageStrip_1;
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import { getI18nBundle } from "@ui5/webcomponents-base/dist/i18nBundle.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/MessageStrip.js";
import UI5MessageStripDesign from "@ui5/webcomponents/dist/types/MessageStripDesign.js";
import { MESSAGE_STRIP_CLOSE_BUTTON, MESSAGE_STRIP_INFORMATION, MESSAGE_STRIP_SUCCESS, MESSAGE_STRIP_WARNING, MESSAGE_STRIP_ERROR, } from "./generated/i18n/i18n-defaults.js";
import redirectAttributes from "./utils/redirectAttributes.js";
import MessageStripTemplate from "./generated/templates/MessageStripTemplate.lit.js";
// Styles
import MessageStripCss from "./generated/themes/MessageStrip.css.js";
var UdexMessageStripDesign;
(function (UdexMessageStripDesign) {
    UdexMessageStripDesign["Action"] = "Action";
})(UdexMessageStripDesign || (UdexMessageStripDesign = {}));
export const MessageStripDesign = { ...UI5MessageStripDesign, ...UdexMessageStripDesign };
export var UdexMessageStripStatusType;
(function (UdexMessageStripStatusType) {
    UdexMessageStripStatusType["Icon"] = "Icon";
    UdexMessageStripStatusType["Text"] = "Text";
    UdexMessageStripStatusType["None"] = "None";
})(UdexMessageStripStatusType || (UdexMessageStripStatusType = {}));
/**
 * @class
 *
 * @constructor
 * @alias udex.components.MessageStrip
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-message-strip
 * @public
 */
let MessageStrip = MessageStrip_1 = class MessageStrip extends UI5Element {
    static async onDefine() {
        MessageStrip_1.i18nBundle = await getI18nBundle("sap-ui-webcomponents-bundle");
    }
    getTranslation(text) {
        return MessageStrip_1.i18nBundle.getText(text);
    }
    textStatusTypeMapping() {
        return {
            Information: this.getTranslation(MESSAGE_STRIP_INFORMATION),
            Positive: this.getTranslation(MESSAGE_STRIP_SUCCESS),
            Negative: this.getTranslation(MESSAGE_STRIP_ERROR),
            Warning: this.getTranslation(MESSAGE_STRIP_WARNING),
        };
    }
    onBeforeRendering() {
        if (this.isDesignAction() || this.statusType !== UdexMessageStripStatusType.Icon) {
            this.hideIcon = true;
        }
    }
    onAfterRendering() {
        redirectAttributes(this, "message-strip");
    }
    isDesignAction() {
        return this.design === MessageStripDesign.Action;
    }
    get showTextStatus() {
        return this.statusType === UdexMessageStripStatusType.Text && !this.isDesignAction();
    }
    get textStatus() {
        if (this.design !== MessageStripDesign.Action) {
            return this.textStatusTypeMapping()[this.design];
        }
    }
    get _closeButtonText() {
        return this.getTranslation(MESSAGE_STRIP_CLOSE_BUTTON);
    }
    _closeClick() {
        this.fireEvent("close");
    }
};
__decorate([
    property({
        type: MessageStripDesign,
        defaultValue: MessageStripDesign.Action,
    })
], MessageStrip.prototype, "design", void 0);
__decorate([
    property({
        type: UdexMessageStripStatusType,
        defaultValue: UdexMessageStripStatusType.Icon,
    })
], MessageStrip.prototype, "statusType", void 0);
__decorate([
    property({ type: Boolean })
], MessageStrip.prototype, "hideCloseButton", void 0);
__decorate([
    property({ type: Boolean })
], MessageStrip.prototype, "hideIcon", void 0);
__decorate([
    slot({ type: Node })
], MessageStrip.prototype, "default", void 0);
MessageStrip = MessageStrip_1 = __decorate([
    customElement({
        tag: "udex-message-strip",
        renderer: litRender,
        styles: MessageStripCss,
        template: MessageStripTemplate,
    })
    /**
     * Fired when the close button is pressed either with a
     * click/tap or by using the Enter or Space key.
     *
     * @public
     */
    ,
    event("close")
], MessageStrip);
MessageStrip.define();
export default MessageStrip;
//# sourceMappingURL=MessageStrip.js.map