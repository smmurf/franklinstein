import UI5Element, { ChangeInfo } from "@ui5/webcomponents-base/dist/UI5Element.js";
import { ResizeObserverCallback } from "@ui5/webcomponents-base/dist/delegate/ResizeHandler.js";
import "@ui5/webcomponents-icons/dist/decline.js";
import "@ui5/webcomponents-icons/dist/search.js";
import "@ui5/webcomponents-icons/dist/microphone.js";
import type SearchInputSuggestion from "./features/SearchSuggestionsPopover.js";
export type SuggestionList = {
    handleSelectItem: () => void;
    text: string;
};
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-search</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Search.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Search
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-search
 * @public
 */
declare class Search extends UI5Element {
    static i18nBundle: any;
    _labelActiveClassName: string;
    _voiceActiveClassName: string;
    _focusActiveClassName: string;
    _handleResizeBound: ResizeObserverCallback;
    suggestedList: Array<SuggestionList>;
    recommendedList: Array<SuggestionList>;
    speechRecognition: any;
    Suggestion?: SearchInputSuggestion;
    /**
     * Defines the value of the component.
     *
     * @type {string}
     * @name sap.ui.webc.web-components.Search.prototype.value
     * @defaultvalue ""
     * @formEvents input
     * @formProperty
     * @public
     */
    value: string;
    /**
     * Defines label text for the input field.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.prototype.label
     * @defaultvalue ""
     * @public
     */
    label: string;
    /**
     * Defines display the reset button for the search field.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.showResetButton
     * @defaultvalue false
     * @public
     */
    showResetButton: boolean;
    /**
     * Defines display the submit button for the search field.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.showSubmitButton
     * @defaultvalue true
     * @public
     */
    showSubmitButton: boolean;
    /**
     * Defines display the voice button for the search field.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.showVoiceButton
     * @defaultvalue false
     * @public
     */
    showVoiceButton: boolean;
    /**
     * Defines suggestions and recommended lists for the component.
     * <br><br>
     * <b>Note:</b> Structure of the property:
     * { suggested: ["string", string, ...], recommended: ["string", "string", ...] }
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.suggestionList
     * @defaultvalue ""
     * @public
     */
    suggestionList: string;
    /**
     * Width of the search component
     * @private
     */
    _searchWidth?: number;
    /**
     * Defines display the suggestion popover in the component.
     *
     * @type {boolean}
     * @name sap.ui.webc.udex.Search.property.showSuggestedPopover
     * @defaultvalue false
     * @public
     */
    showSuggestedPopover: boolean;
    /**
     * Defines the language of voice search.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.languageVoice
     * @defaultvalue "en-US"
     * @public
     */
    languageVoice: string;
    /**
     * Defines the mode of component.
     * <br><br>
     * <b>Note:</b> accepts a string "Standard" or "Home Search".
     * @type {string}
     * @name sap.ui.webc.udex.Search.property.mode
     * @defaultValue "Standard"
     * @public
     */
    mode: "Standard" | "Home Search";
    /**
     * Defines the inner stored class of the label.
     *
     * @type {string}
     * @defaultvalue ""
     * @private
     */
    labelActiveClass: string;
    /**
     * Defines the voice active class of the button.
     *
     * @type {string}
     * @defaultvalue ""
     * @private
     */
    voiceActiveClass: string;
    /**
     * Defines the inner stored value of the classes of the label.
     *
     * @type {string}
     * @defaultvalue ""
     * @private
     */
    labelClasses: string;
    /**
     * Defines the class of focus on the input field.
     *
     * @type {string}
     * @defaultvalue ""
     * @private
     */
    focusClasses: string;
    /**
     * Defines the suggestion popover is opened
     *
     * @type {boolean}
     * @defaultvalue false
     * @private
     */
    open: boolean;
    constructor();
    static onDefine(): Promise<void>;
    onEnterDOM(): void;
    onExitDOM(): void;
    initSpeechRecognition(): void;
    onInvalidation(changeInfo: ChangeInfo): void;
    setNewValue(changeInfo: ChangeInfo): void;
    setNewSuggestionList(changeInfo: ChangeInfo): void;
    setSuggestedRecommendedLists(value: string): void;
    getListWithSuggestion(suggestedList: Array<string>): Array<SuggestionList>;
    getTextWithSuggestion(text: string): string;
    handleSelectItem: (itemValue: string) => () => void;
    onSubmit(): void;
    handleAraiExpanded(): void;
    onOpenPopover(): void;
    onClosePopover(): void;
    handleClassToRoot(): void;
    onBeforeRendering(): void;
    enableSuggestions(): void;
    onAfterRendering(): void;
    handleOutsideClick(): void;
    handleBlur(): void;
    handleSearchChange(e: InputEvent): void;
    handleDebounce: (...args: any) => void;
    handleKeyDown: (e: KeyboardEvent) => void;
    handleEnterKey(e: KeyboardEvent): void;
    handleTabKey(e: KeyboardEvent): void;
    handleTabPrevious(e: KeyboardEvent): void;
    handleUpKey(e: KeyboardEvent): void;
    handleDownKey(e: KeyboardEvent): void;
    handleEscapeKey(e: KeyboardEvent): void;
    handleRightKey(e: KeyboardEvent): void;
    handleLeftKey(e: KeyboardEvent): void;
    handleFocus(): void;
    handleFocusout(): void;
    onReset(): void;
    onVoice(): void;
    onSpeechLaunch(): void;
    onSpeechStart(): void;
    onSpeechResult(): void;
    onSpeechEnd(): void;
    onShowResetButton(): void;
    _handleResize(): void;
    get popoverStyles(): {
        width: string;
    };
    get isShowResetButton(): boolean;
    get isShowSuggestedList(): boolean;
    get isShowRecommendedList(): boolean;
    get hasPopoverContent(): boolean;
    get isShowSubmitButton(): boolean;
    get suggestedHeading(): string;
    get recommendedHeading(): string;
    get isHomeSearchMode(): boolean;
    get homeSearchPopoverClass(): string;
    get searchButtonActiveClass(): string;
    get isNotEmptyClass(): string;
}
export default Search;
