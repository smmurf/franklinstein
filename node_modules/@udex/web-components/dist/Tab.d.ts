import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import TabHeaderTemplate from "./generated/templates/TabHeaderTemplate.lit.js";
import TabInOverflowTemplate from "./generated/templates/TabInOverflowTemplate.lit.js";
interface ITab extends UI5Element {
    getTabInHeaderDomRef: () => ITab | null;
    disabled?: boolean;
    icon?: string;
    selected?: boolean;
    text?: string;
    showAttentionBadge?: boolean;
    href?: string;
    content?: Array<Node>;
    hasIcon: boolean;
    isOnSelectedTab: boolean;
    hasNotIcon: boolean;
    hasNotHref: boolean;
    isSelected: boolean;
    selectedClass: string;
    tabNavigation: any;
    _individualSlot: string;
    _effectiveSlotName: string;
    _slotName: string;
    _selected?: boolean;
    _tabIndex: string;
    _posinset?: number;
    _setsize?: number;
    _contentId?: string;
    getElementInHeader?: () => ITab | null;
    _realTab?: Tab;
}
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tab</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tab.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tab
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tab
 * @public
 */
declare class Tab extends UI5Element implements ITab {
    /**
     * Defines the text of tab.
     * @name udex.components.Tab.prototype.text
     * @public
     * @type { sap.ui.webc.base.types.string }
     */
    text: string;
    /**
     * Defines the selected tab.
     * @name udex.components.Tab.prototype.selected
     * @public
     * @type { sap.ui.webc.base.types.boolean }
     * @defaultValue "false"
     */
    selected: boolean;
    /**
     * Defines the displaying attention badge.
     * @name udex.components.Tab.prototype.showAttentionBadge
     * @public
     * @type { sap.ui.webc.base.types.boolean }
     * @defaultValue "false"
     */
    showAttentionBadge: boolean;
    /**
     * Defines the icon in the tab.
     * @name udex.components.Tab.prototype.icon
     * @public
     * @type { sap.ui.webc.base.types.string }
     */
    icon: string;
    /**
     * Defines the href of the tab.
     * @name udex.components.Tab.prototype.href
     * @public
     * @type { sap.ui.webc.base.types.string }
     */
    href: string;
    /**
     * Define the target of the tab
     * @name udex.components.Tab.property.target
     * @public@type { sap.ui.webc.base.types.string }
     */
    target: "_blank" | "_parent" | "_self" | "_top";
    /**
     * Defines the tab.
     * @private
     * @type { Object }
     */
    _realTab: Tab;
    /**
     * Defines the selected tab for private use.
     * @private
     * @type { boolean }
     * @defaultValue "false"
     */
    _selected: boolean;
    /**
     * Defines the tabindex of the tab.
     * @private
     * @type { boolean }
     * @defaultValue "false"
     */
    _tabIndex: string;
    /**
     * Defines the content of the tab.
     * @type { HTMLElement[] }
     * @name sap.ui.webc.main.Tab.prototype.default
     * @slot content
     * @public
     */
    content: Array<Node>;
    getElementInHeader?: () => ITab | null;
    _individualSlot: string;
    getTabInHeaderDomRef(): ITab | null;
    get isOnSelectedTab(): boolean;
    get _effectiveSlotName(): string;
    get hasIcon(): boolean;
    get classWithIcon(): string;
    get hasNotIcon(): boolean;
    get hasNotHref(): boolean;
    get isSelected(): boolean;
    get selectedClass(): string;
    get tabNavigation(): object;
    get tabInOverflow(): object;
    get _slotName(): string;
    get textValidated(): string;
    get effectiveSelected(): boolean;
    get ariaLabelledBy(): string;
    static get headerTemplate(): typeof TabHeaderTemplate;
    static get overflowTemplate(): typeof TabInOverflowTemplate;
}
export default Tab;
export { ITab };
