/* eslint no-unused-vars: 0 */
import { html, ifDefined, scopeTag } from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
function block0(context, tags, suffix) { return suffix ? html `<${scopeTag("ui5-avatar", tags, suffix)} class="${ifDefined(this.udexAvatarClass)}" ?disabled="${this.disabled}" initials="${ifDefined(this.initials)}" ?interactive="${this.interactive}" accessible-name="${ifDefined(this.accessibleName)}" color-scheme="${ifDefined(this.getUI5AvatarColorScheme)}" fallback-icon="${ifDefined(this.fallbackIcon)}" icon="${ifDefined(this.icon)}" shape="${ifDefined(this.shape)}" size="${ifDefined(this.size)}">${this.imageSlot ? block1.call(this, context, tags, suffix) : undefined}${this.badgeSlot ? block2.call(this, context, tags, suffix) : undefined}</${scopeTag("ui5-avatar", tags, suffix)}>` : html `<ui5-avatar class="${ifDefined(this.udexAvatarClass)}" ?disabled="${this.disabled}" initials="${ifDefined(this.initials)}" ?interactive="${this.interactive}" accessible-name="${ifDefined(this.accessibleName)}" color-scheme="${ifDefined(this.getUI5AvatarColorScheme)}" fallback-icon="${ifDefined(this.fallbackIcon)}" icon="${ifDefined(this.icon)}" shape="${ifDefined(this.shape)}" size="${ifDefined(this.size)}">${this.imageSlot ? block1.call(this, context, tags, suffix) : undefined}${this.badgeSlot ? block2.call(this, context, tags, suffix) : undefined}</ui5-avatar>`; }
function block1(context, tags, suffix) { return html `<slot></slot>`; }
function block2(context, tags, suffix) { return html `<slot name="badge" slot="badge"></slot>`; }
export default block0;
//# sourceMappingURL=AvatarTemplate.lit.js.map