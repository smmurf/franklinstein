import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import type I18nBundle from "@ui5/webcomponents-base/dist/i18nBundle.js";
import DropdownListItem from "./DropdownListItem.js";
export declare enum DropdownListMode {
    SingleSelect = "SingleSelect",
    MultiSelect = "MultiSelect"
}
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-dropdown-list</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/DropdownList.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.DropdownList
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-dropdown-list
 * @public
 */
declare class DropdownList extends UI5Element {
    /**
     * Defines the accessible role of the component.
     *
     * @type {string}
     * @name sap.ui.webc.web-components.DropdownList.prototype.accessibleRole
     * @defaultvalue "list"
     * @public
     */
    accessibleRole: string;
    /**
     * Defines the accessible name of the component.
     *
     * @type {string}
     * @name sap.ui.webc.web-components.DropdownList..prototype.accessibleName
     * @defaultvalue ""
     * @public
     */
    accessibleName: string;
    /**
     * Defines the mode of the component.
     *
     * @type {string}
     * @name sap.ui.webc.web-components.DropdownList.prototype.mode
     * @defaultvalue "SingleSelect"
     * @public
     */
    mode: `${DropdownListMode}`;
    /**
     * Allows control over the height.
     * @type {string}
     * @name sap.ui.webc.web-components.DropdownList.prototype.height
     * @public
     */
    height?: string;
    /**
     * Slot for dropdown list items.
     *
     * @type @type {HTMLElement[]}
     * @name sap.ui.webc.web-components.DropdownList.prototype.default
     * @slot items
     * @public
     */
    items: Array<HTMLElement>;
    static i18nBundle: I18nBundle;
    static onDefine(): Promise<void>;
    onBeforeRendering(): void;
    handleItemPress(e: CustomEvent): void;
    handleKeyDown(e: KeyboardEvent): void;
    handleUpArrow(e: KeyboardEvent): void;
    handleDownArrow(e: KeyboardEvent): void;
    handleHomeKey(e: KeyboardEvent): void;
    handleEndKey(e: KeyboardEvent): void;
    revertSelectedItems(): void;
    focusHeader(item: DropdownListItem): void;
    getItems(): Array<DropdownListItem>;
    getSelectedItems(): Array<DropdownListItem>;
    getCurrentIndex(items: Array<DropdownListItem>, item: DropdownListItem): number;
    getItemsWithoutHeader(): Array<DropdownListItem>;
    getKeyboardNavigationItems(): Array<DropdownListItem>;
    getItemsFromList(): Array<DropdownListItem>;
    prepareListItemsMode(): void;
    isHeader(item: DropdownListItem): boolean;
    get ariaLabelModeText(): string;
    get ariaLabelledBy(): string;
    get modeMultiSelect(): boolean;
    get holderHeight(): string;
}
export default DropdownList;
