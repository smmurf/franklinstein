var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import "@ui5/webcomponents/dist/Button.js";
import "@ui5/webcomponents-icons/dist/AllIcons.js";
// Template
import ButtonTemplate from "./generated/templates/ButtonTemplate.lit.js";
// Styles
import ButtonCss from "./generated/themes/Button.css";
let Button = class Button extends UI5Element {
    onButtonClick(e) {
        e.stopPropagation();
        if (this.disabled === false) {
            this.fireEvent("click");
        }
    }
    get renderIconOnlyButton() {
        return !this.iconOnly;
    }
    get sizeClass() {
        switch (this.size) {
            case "Small":
                return "udex-button--small";
            case "Medium":
                return "udex-button--medium";
            case "Large":
                return "udex-button--large";
            default:
                return "udex-button--medium";
        }
    }
};
__decorate([
    property({ type: Boolean })
], Button.prototype, "disabled", void 0);
__decorate([
    property({ type: String, defaultValue: "Medium" })
], Button.prototype, "size", void 0);
__decorate([
    property({ type: String, defaultValue: "" })
], Button.prototype, "tooltip", void 0);
__decorate([
    property({ type: String, defaultValue: "Primary" })
], Button.prototype, "design", void 0);
__decorate([
    property({ type: String })
], Button.prototype, "icon", void 0);
__decorate([
    property({ type: Boolean })
], Button.prototype, "iconOnly", void 0);
__decorate([
    property({ type: Boolean })
], Button.prototype, "iconEnd", void 0);
__decorate([
    property({ type: Boolean })
], Button.prototype, "toggled", void 0);
__decorate([
    property({ type: String })
], Button.prototype, "accessibleNameRef", void 0);
__decorate([
    property({ type: String })
], Button.prototype, "accessibleName", void 0);
__decorate([
    slot({ type: Node })
], Button.prototype, "default", void 0);
Button = __decorate([
    customElement({
        tag: "udex-button",
        renderer: litRender,
        styles: ButtonCss,
        template: ButtonTemplate,
    })
    /**
     * Fires when button is clicked
     *
     * @allowPreventDefault
     * @public
     */
    ,
    event("click")
], Button);
Button.define();
export default Button;
//# sourceMappingURL=Button.js.map