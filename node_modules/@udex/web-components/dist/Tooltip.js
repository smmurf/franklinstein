var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import ResponsivePopover from "@ui5/webcomponents/dist/ResponsivePopover.js";
// Template
import TooltipTemplate from "./generated/templates/TooltipTemplate.lit.js";
// Styles
import TooltipCss from "./generated/themes/Tooltip.css";
var PlacementType;
(function (PlacementType) {
    PlacementType["Left"] = "Left";
    PlacementType["Right"] = "Right";
    PlacementType["Top"] = "Top";
    PlacementType["Bottom"] = "Bottom";
})(PlacementType || (PlacementType = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-tooltip</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Tooltip.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Tooltip
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-tooltip
 * @public
 */
let Tooltip = class Tooltip extends UI5Element {
    getPopover() {
        return this.shadowRoot.querySelector("[ui5-responsive-popover]");
    }
    onOpen(opener) {
        const popover = this.getPopover();
        popover.showAt(opener);
    }
    onClose() {
        const popover = this.getPopover();
        popover.close(true);
    }
};
__decorate([
    slot({ type: Node })
], Tooltip.prototype, "default", void 0);
__decorate([
    property({ type: String, defaultValue: "" })
], Tooltip.prototype, "title", void 0);
__decorate([
    property({ type: Boolean })
], Tooltip.prototype, "hideArrow", void 0);
__decorate([
    property({ type: PlacementType, defaultValue: PlacementType.Right })
], Tooltip.prototype, "placement", void 0);
Tooltip = __decorate([
    customElement({
        tag: "udex-tooltip",
        renderer: litRender,
        styles: TooltipCss,
        template: TooltipTemplate,
        dependencies: [ResponsivePopover],
    })
], Tooltip);
Tooltip.define();
export default Tooltip;
//# sourceMappingURL=Tooltip.js.map