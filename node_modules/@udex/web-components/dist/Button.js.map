{"version":3,"file":"Button.js","sourceRoot":"","sources":["../src/Button.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,SAAS,MAAM,sDAAsD,CAAC;AAC7E,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE,OAAO,KAAK,MAAM,kDAAkD,CAAC;AACrE,OAAO,mCAAmC,CAAC;AAC3C,OAAO,2CAA2C,CAAC;AAEnD,WAAW;AACX,OAAO,cAAc,MAAM,6CAA6C,CAAC;AAEzE,SAAS;AACT,OAAO,SAAS,MAAM,+BAA+B,CAAC;AAiBtD,IAAM,MAAM,GAAZ,MAAM,MAAO,SAAQ,UAAU;IA8H7B,aAAa,CAAC,CAAQ;QACpB,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,QAAQ,KAAK,KAAK,EAAE;YAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;SACzB;IACH,CAAC;IAED,IAAI,oBAAoB;QACtB,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC;IACxB,CAAC;IAED,IAAI,SAAS;QACX,QAAQ,IAAI,CAAC,IAAI,EAAE;YACnB,KAAK,OAAO;gBACV,OAAO,oBAAoB,CAAC;YAC9B,KAAK,QAAQ;gBACX,OAAO,qBAAqB,CAAC;YAC/B,KAAK,OAAO;gBACV,OAAO,oBAAoB,CAAC;YAC9B;gBACE,OAAO,qBAAqB,CAAC;SAC9B;IACH,CAAC;CACF,CAAA;AA1IG;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACP;AAYnB;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,QAAQ,EAAE,CAAC;oCACnC;AAUd;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,EAAE,EAAE,CAAC;uCAC1B;AAajB;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,YAAY,EAAE,SAAS,EAAE,CAAC;sCACkC;AAUpF;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oCACW;AAYpC;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACP;AAYnB;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uCACR;AAYlB;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;uCACR;AAUlB;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDACE;AAU3B;IADD,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;8CACD;AAYxB;IADD,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;uCACJ;AA5Hb,MAAM;IAfX,aAAa,CAAC;QACb,GAAG,EAAE,aAAa;QAClB,QAAQ,EAAE,SAAS;QACnB,MAAM,EAAE,SAAS;QACjB,QAAQ,EAAE,cAAc;KACzB,CAAC;IAEF;;;;;OAKG;;IACF,KAAK,CAAC,OAAO,CAAC;GAET,MAAM,CAqJX;AAED,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,eAAe,MAAM,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport event from \"@ui5/webcomponents-base/dist/decorators/event.js\";\nimport \"@ui5/webcomponents/dist/Button.js\";\nimport \"@ui5/webcomponents-icons/dist/AllIcons.js\";\n\n// Template\nimport ButtonTemplate from \"./generated/templates/ButtonTemplate.lit.js\";\n\n// Styles\nimport ButtonCss from \"./generated/themes/Button.css\";\n\n@customElement({\n  tag: \"udex-button\",\n  renderer: litRender,\n  styles: ButtonCss,\n  template: ButtonTemplate,\n})\n\n/**\n * Fires when button is clicked\n *\n * @allowPreventDefault\n * @public\n */\n@event(\"click\")\n\nclass Button extends UI5Element {\n  /**\n   * Defines whether the component is in disabled state.\n   * <br><br>\n   * <b>Note:</b> A disabled component is completely noninteractive.\n   * @type {boolean}\n   * @name sap.ui.webc.udex.Button.prototype.disabled\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    disabled!: boolean;\n\n  /**\n   * Defines the size of the component.\n   * <br><br>\n   * <b>Note:</b> There are three different sizes to choose from.\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.size\n   * @defaultvalue \"cozy\"\n   * @public\n   */\n  @property({ type: String, defaultValue: \"Medium\" })\n    size!: string;\n\n  /**\n   * Defines the tooltip of the component.\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.tooltip\n   * @defaultvalue \"\"\n   * @public\n   */\n  @property({ type: String, defaultValue: \"\" })\n    tooltip!: string;\n\n  /**\n   * Defines the design of the component.\n   * <br><br>\n   * <b>Note:</b> The color-schema is different for each design.\n   *\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.design\n   * @defaultvalue \"primary\"\n   * @public\n   */\n  @property({ type: String, defaultValue: \"Primary\" })\n    design!: \"Primary\" | \"Secondary\" | \"Tertiary\" | \"Positive\" | \"Negative\" | \"Warning\";\n\n  /**\n   * TODO:Beschreibung\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.size\n   * @defaultvalue \"cozy\"\n   * @public\n   */\n  @property({ type: String })\n    icon!: \"Small\" | \"Medium\" | \"Large\";\n\n  /**\n   * Controls if the buttons will only show an icon and no text\n   * <br><br>\n   * <b>Note:</b> It should be provided an icon with the \"icon\" property\n   * @type {boolean}\n   * @name sap.ui.webc.udex.Button.prototype.iconOnly\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    iconOnly!: boolean;\n\n  /**\n   * Renders the slot with name \"icon\" before or after the buttonlabel.\n   * <br><br>\n   * <b>Note:</b> Only has effect if a slot with name \"icon\" is provided\n   * @type {boolean}\n   * @name sap.ui.webc.udex.Button.prototype.iconEnd\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    iconEnd!: boolean;\n\n  /**\n   * Sets a toggled state of the component.\n   * <br><br>\n   * <b>Note:</b> The Color-schema is different in toggled state.\n   * @type {boolean}\n   * @name sap.ui.webc.udex.Button.prototype.toggled\n   * @defaultvalue false\n   * @public\n   */\n  @property({ type: Boolean })\n    toggled!: boolean;\n\n  /**\n   * Controls id of the element that label the component\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.accessibleNameRef\n   * @defaultvalue \"\"\n   * @public\n   */\n  @property({ type: String })\n    accessibleNameRef!: string;\n\n  /**\n   * Controls the ARIA name of the button\n   * @type {string}\n   * @name sap.ui.webc.udex.Button.prototype.accessibleName\n   * @defaultvalue \"\"\n   * @public\n   */\n  @property({ type: String })\n    accessibleName!: string;\n\n  /**\n   * Defines the label of the component.\n   * <br><br>\n   * <b>Note:</b> Provide an \"icon\"-slot and an empty label to create an icon-only button.\n   * @type {Node}\n   * @name sap.ui.webc.udex.Button.prototype.default\n   * @defaultvalue undefined\n   * @public\n   */\n  @slot({ type: Node })\n    default!: Node;\n\n  onButtonClick(e: Event): void {\n    e.stopPropagation();\n    if (this.disabled === false) {\n      this.fireEvent(\"click\");\n    }\n  }\n\n  get renderIconOnlyButton() {\n    return !this.iconOnly;\n  }\n\n  get sizeClass() {\n    switch (this.size) {\n    case \"Small\":\n      return \"udex-button--small\";\n    case \"Medium\":\n      return \"udex-button--medium\";\n    case \"Large\":\n      return \"udex-button--large\";\n    default:\n      return \"udex-button--medium\";\n    }\n  }\n}\n\nButton.define();\n\nexport default Button;\n"]}