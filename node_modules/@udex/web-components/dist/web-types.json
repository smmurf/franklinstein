{
  "$schema": "https://raw.githubusercontent.com/JetBrains/web-types/master/schema/web-types.json",
  "name": "@udex/web-components",
  "version": "0.45.1",
  "description-markup": "markdown",
  "contributions": {
    "html": {
      "elements": [
        {
          "name": "udex-accordion",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-accordion</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Accordion.js\";</code>\n---\n\n\n### **Events:**\n - **toggle-items** - Triggered when the user click on on Expand/Collapse All button.\n\n### **Slots:**\n - **default** - Slot for accordion items.",
          "doc-url": "",
          "attributes": [
            {
              "name": "headline",
              "description": "Defines the headline text of the accordion component.",
              "value": { "type": "string" }
            }
          ],
          "slots": [
            { "name": "default", "description": "Slot for accordion items." }
          ],
          "events": [
            {
              "name": "toggle-items",
              "description": "Triggered when the user click on on Expand/Collapse All button."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "headline",
                "description": "Defines the headline text of the accordion component.",
                "value": { "type": "string" }
              }
            ],
            "events": [
              {
                "name": "toggle-items",
                "description": "Triggered when the user click on on Expand/Collapse All button."
              }
            ]
          }
        },
        {
          "name": "udex-accordion-item",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-accordion-item</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/AccordionItem.js\";</code>\n---\n\n\n### **Events:**\n - **accordion-item-focus** - Triggered when the user focuses on an accordion item.\n\n### **Slots:**\n - **default** - Slot for accordion item content.",
          "doc-url": "",
          "attributes": [
            {
              "name": "title",
              "description": "Defines the title of the accordion item component.",
              "value": { "type": "string" }
            },
            {
              "name": "_direction",
              "description": "Defines direction of the accordion item.",
              "value": { "type": "string | undefined" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Slot for accordion item content."
            }
          ],
          "events": [
            {
              "name": "accordion-item-focus",
              "description": "Triggered when the user focuses on an accordion item."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "title",
                "description": "Defines the title of the accordion item component.",
                "value": { "type": "string" }
              },
              {
                "name": "_direction",
                "description": "Defines direction of the accordion item.",
                "value": { "type": "string | undefined" }
              }
            ],
            "events": [
              {
                "name": "accordion-item-focus",
                "description": "Triggered when the user focuses on an accordion item."
              }
            ]
          }
        },
        {
          "name": "udex-badge",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-badge</code>\n<h3>ES6 Module Import</h3>\n\n<code>import \"@udex/web-components/dist/Badge.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the component.",
          "doc-url": "",
          "attributes": [
            {
              "name": "type",
              "description": "Defines the type of the component.",
              "value": { "type": "BadgeType", "default": "BadgeType.text" }
            },
            {
              "name": "size",
              "description": "Defines the size of the component.",
              "value": { "type": "BadgeSize", "default": "BadgeSize.large" }
            },
            {
              "name": "design",
              "description": "Defines the design of text type component.",
              "value": {
                "type": "BadgeTextDesign",
                "default": "BadgeTextDesign.Info"
              }
            },
            {
              "name": "number-design",
              "description": "Defines the design of number type component.",
              "value": {
                "type": "BadgeNumberDesign",
                "default": "BadgeNumberDesign.Blue"
              }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "type",
                "description": "Defines the type of the component.",
                "value": { "type": "BadgeType" }
              },
              {
                "name": "size",
                "description": "Defines the size of the component.",
                "value": { "type": "BadgeSize" }
              },
              {
                "name": "design",
                "description": "Defines the design of text type component.",
                "value": { "type": "BadgeTextDesign" }
              },
              {
                "name": "number-design",
                "description": "Defines the design of number type component.",
                "value": { "type": "BadgeNumberDesign" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-carousel",
          "description": "\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the component.",
          "doc-url": "",
          "attributes": [
            {
              "name": "navigation-placement",
              "description": "Defines the position of the navigation.\n<br><br>\nAvailable options are:\n<ul>\n<li><code>top</code> - the navigation button are placed above the component.</li>\n<li><code>bottom</code> - the navigation button arrows are placed below the component.</li>\n</ul>",
              "value": { "type": "\"top\" | \"bottom\"" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "navigation-placement",
                "description": "Defines the position of the navigation.\n<br><br>\nAvailable options are:\n<ul>\n<li><code>top</code> - the navigation button are placed above the component.</li>\n<li><code>bottom</code> - the navigation button arrows are placed below the component.</li>\n</ul>",
                "value": { "type": "\"top\" | \"bottom\"" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-checkbox",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-checkbox</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Checkbox.js\";</code>\n---\n",
          "doc-url": "",
          "attributes": [],
          "events": [],
          "js": { "properties": [], "events": [] }
        },
        {
          "name": "udex-divider",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\nThe <code>udex-divider</code> component is a divider component used to separate content in a page.\n---\n",
          "doc-url": "",
          "attributes": [],
          "events": [],
          "js": { "properties": [], "events": [] }
        },
        {
          "name": "udex-dropdown",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-dropdown</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Dropdown.js\";</code>\n---\n\n\n### **Events:**\n - **click-trigger** - Fired event when the user clicks the trigger.\n- **before-open** - Fired before the dropdown is opened.\n- **after-open** - Fired after the dropdown is opened.\n- **before-close** - Fired before the menu is closed.\n- **after-close** - Fired after the menu is closed.\n\n### **Slots:**\n - **default** - Defines the content of the Dropdown.\n- **header** - Defines the header HTML Element.\n- **footer** - Defines the footer HTML Element.\n- **trigger** - Defines the trigger HTML Element.",
          "doc-url": "",
          "attributes": [
            {
              "name": "placement-type",
              "description": "Determines on which side the component is placed at.",
              "value": { "type": "\"Left\" | \"Right\" | \"Top\" | \"Bottom\"" }
            },
            {
              "name": "horizontal-align",
              "description": "Determines the horizontal alignment of the component.",
              "value": {
                "type": "\"Left\" | \"Right\" | \"Center\" | \"Stretch\""
              }
            },
            {
              "name": "open",
              "description": "Indicates if the dropdown pane is open",
              "value": { "type": "boolean" }
            },
            {
              "name": "width",
              "description": "Allows control over the width.",
              "value": { "type": "string | undefined" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the Dropdown."
            },
            {
              "name": "header",
              "description": "Defines the header HTML Element."
            },
            {
              "name": "footer",
              "description": "Defines the footer HTML Element."
            },
            {
              "name": "trigger",
              "description": "Defines the trigger HTML Element."
            }
          ],
          "events": [
            {
              "name": "click-trigger",
              "description": "Fired event when the user clicks the trigger."
            },
            {
              "name": "before-open",
              "description": "Fired before the dropdown is opened."
            },
            {
              "name": "after-open",
              "description": "Fired after the dropdown is opened."
            },
            {
              "name": "before-close",
              "description": "Fired before the menu is closed."
            },
            {
              "name": "after-close",
              "description": "Fired after the menu is closed."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "placement-type",
                "description": "Determines on which side the component is placed at.",
                "value": {
                  "type": "\"Left\" | \"Right\" | \"Top\" | \"Bottom\""
                }
              },
              {
                "name": "horizontal-align",
                "description": "Determines the horizontal alignment of the component.",
                "value": {
                  "type": "\"Left\" | \"Right\" | \"Center\" | \"Stretch\""
                }
              },
              {
                "name": "open",
                "description": "Indicates if the dropdown pane is open",
                "value": { "type": "boolean" }
              },
              {
                "name": "width",
                "description": "Allows control over the width.",
                "value": { "type": "string | undefined" }
              }
            ],
            "events": [
              {
                "name": "click-trigger",
                "description": "Fired event when the user clicks the trigger."
              },
              {
                "name": "before-open",
                "description": "Fired before the dropdown is opened."
              },
              {
                "name": "after-open",
                "description": "Fired after the dropdown is opened."
              },
              {
                "name": "before-close",
                "description": "Fired before the menu is closed."
              },
              {
                "name": "after-close",
                "description": "Fired after the menu is closed."
              }
            ]
          }
        },
        {
          "name": "udex-dropdown-list",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-dropdown-list</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/DropdownList.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Slot for dropdown list items.",
          "doc-url": "",
          "attributes": [
            {
              "name": "accessible-role",
              "description": "Defines the accessible role of the component.",
              "value": { "type": "string" }
            },
            {
              "name": "accessible-name",
              "description": "Defines the accessible name of the component.",
              "value": { "type": "string" }
            },
            {
              "name": "mode",
              "description": "Defines the mode of the component.",
              "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
            },
            {
              "name": "height",
              "description": "Allows control over the height.",
              "value": { "type": "string | undefined" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Slot for dropdown list items."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "accessible-role",
                "description": "Defines the accessible role of the component.",
                "value": { "type": "string" }
              },
              {
                "name": "accessible-name",
                "description": "Defines the accessible name of the component.",
                "value": { "type": "string" }
              },
              {
                "name": "mode",
                "description": "Defines the mode of the component.",
                "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
              },
              {
                "name": "height",
                "description": "Allows control over the height.",
                "value": { "type": "string | undefined" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-dropdown-list-group-header",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-dropdown-list-group-header</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/DropdownListGroupHeader.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Slot for dropdown list items.",
          "doc-url": "",
          "attributes": [
            {
              "name": "label",
              "description": "Defines the title of the GroupHeader item component.",
              "value": { "type": "string" }
            },
            {
              "name": "supporting-text",
              "description": "Defines the supportingText, displayed in the end of the item.",
              "value": { "type": "string" }
            },
            {
              "name": "mode",
              "description": "Defines the mode of the item.",
              "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Slot for dropdown list items."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "label",
                "description": "Defines the title of the GroupHeader item component.",
                "value": { "type": "string" }
              },
              {
                "name": "supporting-text",
                "description": "Defines the supportingText, displayed in the end of the item.",
                "value": { "type": "string" }
              },
              {
                "name": "mode",
                "description": "Defines the mode of the item.",
                "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-dropdown-list-item",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-dropdown-list-item</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/DropdownListItem.js\";</code>\n---\n\n\n### **Events:**\n - **item-focus** - Fired event when the user click on a dropdown list item.\n- **item-press** - Fired event when the user focuses on a dropdown list item.\n\n### **Slots:**\n - **default** - Slot for dropdown list item content.",
          "doc-url": "",
          "attributes": [
            {
              "name": "disabled",
              "description": "Defines whether <code>ui5-li</code> is in disabled state.",
              "value": { "type": "boolean" }
            },
            {
              "name": "supporting-text",
              "description": "Defines the <code>supportingText</code>, displayed in the end of the list item.",
              "value": { "type": "string" }
            },
            {
              "name": "selected",
              "description": "Defines the selected state of the item.",
              "value": { "type": "boolean" }
            },
            {
              "name": "mode",
              "description": "Defines the mode of the item.",
              "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
            },
            {
              "name": "end-section",
              "description": "Defines whether a visual separator should be rendered after the item.",
              "value": { "type": "boolean" }
            },
            {
              "name": "indeterminate",
              "description": "Defines whether the selection of a dropdown list is displayed as partially selected.",
              "value": { "type": "boolean | undefined" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Slot for dropdown list item content."
            }
          ],
          "events": [
            {
              "name": "item-focus",
              "description": "Fired event when the user click on a dropdown list item."
            },
            {
              "name": "item-press",
              "description": "Fired event when the user focuses on a dropdown list item."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "disabled",
                "description": "Defines whether <code>ui5-li</code> is in disabled state.",
                "value": { "type": "boolean" }
              },
              {
                "name": "supporting-text",
                "description": "Defines the <code>supportingText</code>, displayed in the end of the list item.",
                "value": { "type": "string" }
              },
              {
                "name": "selected",
                "description": "Defines the selected state of the item.",
                "value": { "type": "boolean" }
              },
              {
                "name": "mode",
                "description": "Defines the mode of the item.",
                "value": { "type": "\"SingleSelect\" | \"MultiSelect\"" }
              },
              {
                "name": "end-section",
                "description": "Defines whether a visual separator should be rendered after the item.",
                "value": { "type": "boolean" }
              },
              {
                "name": "indeterminate",
                "description": "Defines whether the selection of a dropdown list is displayed as partially selected.",
                "value": { "type": "boolean | undefined" }
              }
            ],
            "events": [
              {
                "name": "item-focus",
                "description": "Fired event when the user click on a dropdown list item."
              },
              {
                "name": "item-press",
                "description": "Fired event when the user focuses on a dropdown list item."
              }
            ]
          }
        },
        {
          "name": "udex-hero-banner",
          "description": "\n---\n\n\n### **Slots:**\n - **content** - Slot for primary content.\n- **additionalContent** - Slot for any additional content.\n- **backgroundPicture** - Slot background picture override.",
          "doc-url": "",
          "attributes": [
            {
              "name": "background-image",
              "description": "Allows control over the background image source.",
              "value": { "type": "string | undefined" }
            },
            {
              "name": "background-image-loading-strategy",
              "description": "Allows control over the background image loading strategy.",
              "value": { "type": "imageLoadingStrategies | undefined" }
            },
            {
              "name": "background-image-label",
              "description": "Used as the label for background image.",
              "value": { "type": "string | undefined" }
            },
            {
              "name": "background-color",
              "description": "Allows control over the background color.\nValue provided should be compatible with standard CSS rendering, e.g:\n - HEX: \"#FFF\", \"#FFFFFF\", \"FFFFFFFF\"\n - RGB/A: \"rgb(255, 255, 255)\", \"rgba(255, 255, 255, 1)\"\n - HSL/A: \"hsl(0, 100%, 100%)\", \"hsla(0, 100%, 100%, 1\"\n - Variables: \"var(--sapShell_Background)\", \"var(--udexColorNeutralWhite)\"\n - Text values: \"white\", \"red\"",
              "value": { "type": "string | undefined" }
            }
          ],
          "slots": [
            { "name": "content", "description": "Slot for primary content." },
            {
              "name": "additionalContent",
              "description": "Slot for any additional content."
            },
            {
              "name": "backgroundPicture",
              "description": "Slot background picture override."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "background-image",
                "description": "Allows control over the background image source.",
                "value": { "type": "string | undefined" }
              },
              {
                "name": "background-image-loading-strategy",
                "description": "Allows control over the background image loading strategy.",
                "value": { "type": "imageLoadingStrategies | undefined" }
              },
              {
                "name": "background-image-label",
                "description": "Used as the label for background image.",
                "value": { "type": "string | undefined" }
              },
              {
                "name": "background-color",
                "description": "Allows control over the background color.\nValue provided should be compatible with standard CSS rendering, e.g:\n - HEX: \"#FFF\", \"#FFFFFF\", \"FFFFFFFF\"\n - RGB/A: \"rgb(255, 255, 255)\", \"rgba(255, 255, 255, 1)\"\n - HSL/A: \"hsl(0, 100%, 100%)\", \"hsla(0, 100%, 100%, 1\"\n - Variables: \"var(--sapShell_Background)\", \"var(--udexColorNeutralWhite)\"\n - Text values: \"white\", \"red\"",
                "value": { "type": "string | undefined" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-link",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-link</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Link.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Defines the label of the component.\n<br><br>\n<b>Note:</b> Provide an \"icon\"-slot and an empty label to create an icon-only button.",
          "doc-url": "",
          "attributes": [
            {
              "name": "icon",
              "description": "Used as the label for background image.",
              "value": { "type": "string | undefined" }
            },
            {
              "name": "icon-placement",
              "description": "Used as the label for background image.",
              "value": { "type": "IconPlacement | undefined" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the label of the component.\n<br><br>\n<b>Note:</b> Provide an \"icon\"-slot and an empty label to create an icon-only button."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "icon",
                "description": "Used as the label for background image.",
                "value": { "type": "string | undefined" }
              },
              {
                "name": "icon-placement",
                "description": "Used as the label for background image.",
                "value": { "type": "IconPlacement | undefined" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-message-strip",
          "description": "\n---\n\n\n### **Events:**\n - **close** - Fired when the close button is pressed either with a\nclick/tap or by using the Enter or Space key.\n\n### **Slots:**\n - **default** - Defines the content of the component.",
          "doc-url": "",
          "attributes": [
            {
              "name": "design",
              "description": "Defines the component type.",
              "value": {
                "type": "\"Information\" | \"Positive\" | \"Negative\" | \"Warning\" | \"Action\""
              }
            },
            {
              "name": "status-type",
              "description": "Defines the component Status Type.",
              "value": { "type": "\"Icon\" | \"Text\" | \"None\"" }
            },
            {
              "name": "hide-close-button",
              "description": "Defines whether the MessageStrip renders close button.",
              "value": { "type": "boolean" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component."
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Fired when the close button is pressed either with a\nclick/tap or by using the Enter or Space key."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "design",
                "description": "Defines the component type.",
                "value": {
                  "type": "\"Information\" | \"Positive\" | \"Negative\" | \"Warning\" | \"Action\""
                }
              },
              {
                "name": "status-type",
                "description": "Defines the component Status Type.",
                "value": { "type": "\"Icon\" | \"Text\" | \"None\"" }
              },
              {
                "name": "hide-close-button",
                "description": "Defines whether the MessageStrip renders close button.",
                "value": { "type": "boolean" }
              }
            ],
            "events": [
              {
                "name": "close",
                "description": "Fired when the close button is pressed either with a\nclick/tap or by using the Enter or Space key."
              }
            ]
          }
        },
        {
          "name": "udex-modal",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\nThe <code>udex-modal</code> component is a demo component that displays some text.\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the Popup.\n- **header** - Defines the header HTML Element.\n- **footer** - Defines the footer HTML Element.",
          "doc-url": "",
          "attributes": [
            {
              "name": "type",
              "description": "Defines modal display type\n<br><br>\n<b>Note:</b> The <code>basic</code> type is simplified version of styling.",
              "value": { "type": "ModalType" }
            },
            {
              "name": "open",
              "description": "Indicates if the element is open",
              "value": { "type": "boolean" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the Popup."
            },
            {
              "name": "header",
              "description": "Defines the header HTML Element."
            },
            {
              "name": "footer",
              "description": "Defines the footer HTML Element."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "type",
                "description": "Defines modal display type\n<br><br>\n<b>Note:</b> The <code>basic</code> type is simplified version of styling.",
                "value": { "type": "ModalType" }
              },
              {
                "name": "open",
                "description": "Indicates if the element is open",
                "value": { "type": "boolean" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-pagination",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\nThe <code>udex-pagination</code> component is a pagination component used to navigate thought the pages.\n---\n\n\n### **Events:**\n - **change** - Fires when pagination item was clicked.",
          "doc-url": "",
          "attributes": [
            {
              "name": "pages",
              "description": "Defines number of pages.",
              "value": { "type": "number | undefined" }
            },
            {
              "name": "type",
              "description": "Defines type of pagination.",
              "value": { "type": "PaginationType | undefined" }
            },
            {
              "name": "display",
              "description": "Define display purpose.",
              "value": { "type": "DisplayType | undefined" }
            },
            {
              "name": "absolute-navigation",
              "description": "Define if arrow icons for last and first page are visible.",
              "value": { "type": "boolean" }
            },
            {
              "name": "_direction",
              "description": "Defines direction of the input.",
              "value": { "type": "string | undefined" }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "Fires when pagination item was clicked."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "pages",
                "description": "Defines number of pages.",
                "value": { "type": "number | undefined" }
              },
              {
                "name": "type",
                "description": "Defines type of pagination.",
                "value": { "type": "PaginationType | undefined" }
              },
              {
                "name": "display",
                "description": "Define display purpose.",
                "value": { "type": "DisplayType | undefined" }
              },
              {
                "name": "absolute-navigation",
                "description": "Define if arrow icons for last and first page are visible.",
                "value": { "type": "boolean" }
              },
              {
                "name": "_direction",
                "description": "Defines direction of the input.",
                "value": { "type": "string | undefined" }
              }
            ],
            "events": [
              {
                "name": "change",
                "description": "Fires when pagination item was clicked."
              }
            ]
          }
        },
        {
          "name": "udex-progress-bar",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-progress-bar</code>\n<h3>ES6 Module Import</h3>\n\n<code>import \"@udex/web-components/dist/ProgressBar.js\";</code>\n---\n",
          "doc-url": "",
          "attributes": [],
          "events": [],
          "js": { "properties": [], "events": [] }
        },
        {
          "name": "udex-quote",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\nThe <code>udex-quote</code> component is a demo component that displays some text.\n---\n\n\n### **Slots:**\n - **default** - Defines the text content of the Quote.\n- **link** - Defines the link in the Quote\n- **author** - Defines author's name and company\n- **image** - Defines image near quote text",
          "doc-url": "",
          "attributes": [
            {
              "name": "image-size",
              "description": "Defines image (Avatar or company logo) size",
              "value": { "type": "SizeType" }
            },
            {
              "name": "text-size",
              "description": "Defines text size",
              "value": { "type": "SizeType" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the text content of the Quote."
            },
            { "name": "link", "description": "Defines the link in the Quote" },
            {
              "name": "author",
              "description": "Defines author's name and company"
            },
            { "name": "image", "description": "Defines image near quote text" }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "image-size",
                "description": "Defines image (Avatar or company logo) size",
                "value": { "type": "SizeType" }
              },
              {
                "name": "text-size",
                "description": "Defines text size",
                "value": { "type": "SizeType" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-radio-button",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-radio-button</code>\n<h3>ES6 Module Import</h3>\n\n<code>import \"@udex/web-components/dist/RadioButton.js\";</code>\n---\n",
          "doc-url": "",
          "attributes": [
            {
              "name": "display-only",
              "description": "Define if arrow icons for last and first page are visible.",
              "value": { "type": "boolean" }
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "display-only",
                "description": "Define if arrow icons for last and first page are visible.",
                "value": { "type": "boolean" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-rating-indicator",
          "description": "### Overview\n\n### ES6 Module Import\n\n`import \"@ui5/webcomponents/dist/RatingIndicator.js\";`\n---\n\n\n### **Events:**\n - **change** - The event is fired when the value changes.",
          "doc-url": "",
          "attributes": [
            {
              "name": "value",
              "description": "The indicated value of the rating.\n\n**Note:** If you set a number which is not round, it would be shown as follows:\n\n- 1.0 - 1.2 -> 1\n- 1.3 - 1.7 -> 1.5\n- 1.8 - 1.9 -> 2",
              "value": { "type": "number", "default": "0" }
            },
            {
              "name": "max",
              "description": "The number of displayed rating symbols.",
              "value": { "type": "number", "default": "5" }
            },
            {
              "name": "disabled",
              "description": "Defines whether the component is disabled.\n\n**Note:** A disabled component is completely noninteractive.",
              "value": { "type": "boolean", "default": "false" }
            },
            {
              "name": "readonly",
              "description": "Defines whether the component is read-only.\n\n**Note:** A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
              "value": { "type": "boolean", "default": "false" }
            },
            {
              "name": "accessible-name",
              "description": "Defines the accessible ARIA name of the component.",
              "value": { "type": "string", "default": "\"\"" }
            },
            {
              "name": "accessible-name-ref",
              "description": "Receives id(or many ids) of the elements that label the component.",
              "value": { "type": "string", "default": "\"\"" }
            },
            {
              "name": "required",
              "description": "Defines whether the component is required.",
              "value": { "type": "boolean", "default": "false" }
            },
            {
              "name": "tooltip",
              "description": "Defines the tooltip of the component.",
              "value": { "type": "string", "default": "\"\"" }
            },
            {
              "name": "display",
              "description": "Defines the display type of the component.",
              "value": {
                "type": "DisplayType",
                "default": "DisplayType.Desktop"
              }
            },
            {
              "name": "total-count",
              "description": "The number of total votes.",
              "value": { "type": "number" }
            }
          ],
          "events": [
            {
              "name": "change",
              "description": "The event is fired when the value changes."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "value",
                "description": "The indicated value of the rating.\n\n**Note:** If you set a number which is not round, it would be shown as follows:\n\n- 1.0 - 1.2 -> 1\n- 1.3 - 1.7 -> 1.5\n- 1.8 - 1.9 -> 2",
                "value": { "type": "number" }
              },
              {
                "name": "max",
                "description": "The number of displayed rating symbols.",
                "value": { "type": "number" }
              },
              {
                "name": "disabled",
                "description": "Defines whether the component is disabled.\n\n**Note:** A disabled component is completely noninteractive.",
                "value": { "type": "boolean" }
              },
              {
                "name": "readonly",
                "description": "Defines whether the component is read-only.\n\n**Note:** A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
                "value": { "type": "boolean" }
              },
              {
                "name": "accessible-name",
                "description": "Defines the accessible ARIA name of the component.",
                "value": { "type": "string" }
              },
              {
                "name": "accessible-name-ref",
                "description": "Receives id(or many ids) of the elements that label the component.",
                "value": { "type": "string" }
              },
              {
                "name": "required",
                "description": "Defines whether the component is required.",
                "value": { "type": "boolean" }
              },
              {
                "name": "tooltip",
                "description": "Defines the tooltip of the component.",
                "value": { "type": "string" }
              },
              {
                "name": "display",
                "description": "Defines the display type of the component.",
                "value": { "type": "DisplayType" }
              },
              {
                "name": "total-count",
                "description": "The number of total votes.",
                "value": { "type": "number" }
              }
            ],
            "events": [
              {
                "name": "change",
                "description": "The event is fired when the value changes."
              }
            ]
          }
        },
        {
          "name": "udex-search",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-search</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Search.js\";</code>\n---\n\n\n### **Events:**\n - **submit-search-value** - Fired event when the user submitted the value.",
          "doc-url": "",
          "attributes": [
            {
              "name": "value",
              "description": "Defines the value of the component.",
              "value": { "type": "string" }
            },
            {
              "name": "label",
              "description": "Defines label text for the input field.",
              "value": { "type": "string" }
            },
            {
              "name": "show-reset-button",
              "description": "Defines display the reset button for the search field.",
              "value": { "type": "boolean" }
            },
            {
              "name": "show-submit-button",
              "description": "Defines display the submit button for the search field.",
              "value": { "type": "boolean" }
            },
            {
              "name": "show-voice-button",
              "description": "Defines display the voice button for the search field.",
              "value": { "type": "boolean" }
            },
            {
              "name": "suggestion-list",
              "description": "Defines suggestions and recommended lists for the component.\n<br><br>\n<b>Note:</b> Structure of the property:\n{ suggested: [\"string\", string, ...], recommended: [\"string\", \"string\", ...] }",
              "value": { "type": "string" }
            },
            {
              "name": "show-suggested-popover",
              "description": "Defines display the suggestion popover in the component.",
              "value": { "type": "boolean" }
            },
            {
              "name": "language-voice",
              "description": "Defines the language of voice search.",
              "value": { "type": "string" }
            },
            {
              "name": "mode",
              "description": "Defines the mode of component.\n<br><br>\n<b>Note:</b> accepts a string \"Standard\" or \"Home Search\".",
              "value": { "type": "\"Standard\" | \"Home Search\"" }
            }
          ],
          "events": [
            {
              "name": "submit-search-value",
              "description": "Fired event when the user submitted the value."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "value",
                "description": "Defines the value of the component.",
                "value": { "type": "string" }
              },
              {
                "name": "label",
                "description": "Defines label text for the input field.",
                "value": { "type": "string" }
              },
              {
                "name": "show-reset-button",
                "description": "Defines display the reset button for the search field.",
                "value": { "type": "boolean" }
              },
              {
                "name": "show-submit-button",
                "description": "Defines display the submit button for the search field.",
                "value": { "type": "boolean" }
              },
              {
                "name": "show-voice-button",
                "description": "Defines display the voice button for the search field.",
                "value": { "type": "boolean" }
              },
              {
                "name": "suggestion-list",
                "description": "Defines suggestions and recommended lists for the component.\n<br><br>\n<b>Note:</b> Structure of the property:\n{ suggested: [\"string\", string, ...], recommended: [\"string\", \"string\", ...] }",
                "value": { "type": "string" }
              },
              {
                "name": "show-suggested-popover",
                "description": "Defines display the suggestion popover in the component.",
                "value": { "type": "boolean" }
              },
              {
                "name": "language-voice",
                "description": "Defines the language of voice search.",
                "value": { "type": "string" }
              },
              {
                "name": "mode",
                "description": "Defines the mode of component.\n<br><br>\n<b>Note:</b> accepts a string \"Standard\" or \"Home Search\".",
                "value": { "type": "\"Standard\" | \"Home Search\"" }
              }
            ],
            "events": [
              {
                "name": "submit-search-value",
                "description": "Fired event when the user submitted the value."
              }
            ]
          }
        },
        {
          "name": "udex-tab",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-tab</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Tab.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the tab.",
          "doc-url": "",
          "attributes": [
            {
              "name": "text",
              "description": "Defines the text of tab.",
              "value": { "type": "string" }
            },
            {
              "name": "selected",
              "description": "Defines the selected tab.",
              "value": { "type": "boolean" }
            },
            {
              "name": "show-attention-badge",
              "description": "Defines the displaying attention badge.",
              "value": { "type": "boolean" }
            },
            {
              "name": "icon",
              "description": "Defines the icon in the tab.",
              "value": { "type": "string" }
            },
            {
              "name": "href",
              "description": "Defines the href of the tab.",
              "value": { "type": "string" }
            },
            {
              "name": "target",
              "description": "Define the target of the tab",
              "value": {
                "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
              }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the tab."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "text",
                "description": "Defines the text of tab.",
                "value": { "type": "string" }
              },
              {
                "name": "selected",
                "description": "Defines the selected tab.",
                "value": { "type": "boolean" }
              },
              {
                "name": "show-attention-badge",
                "description": "Defines the displaying attention badge.",
                "value": { "type": "boolean" }
              },
              {
                "name": "icon",
                "description": "Defines the icon in the tab.",
                "value": { "type": "string" }
              },
              {
                "name": "href",
                "description": "Defines the href of the tab.",
                "value": { "type": "string" }
              },
              {
                "name": "target",
                "description": "Define the target of the tab",
                "value": {
                  "type": "\"_blank\" | \"_parent\" | \"_self\" | \"_top\""
                }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-tab-navigation",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n<h3>Usage</h3>\n\nFor the <code>udex-tab-navigation</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/TabNavigation.js\";</code>\n---\n\n\n### **Events:**\n - **click** - Fires when the tab was clicked.\n\n### **Slots:**\n - **default** - Defines the tabs and content.",
          "doc-url": "",
          "attributes": [
            {
              "name": "size-more-button",
              "description": "Defines the size of the \"More\" button.",
              "value": { "type": "\"Small\" | \"Medium\"" }
            },
            {
              "name": "mode",
              "description": "Defines the mode of the component.",
              "value": { "type": "\"Light\" | \"Dark\"" }
            },
            {
              "name": "icon-without-background",
              "description": "Defines the background color of the component.",
              "value": { "type": "boolean" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the tabs and content."
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Fires when the tab was clicked."
            }
          ],
          "js": {
            "properties": [
              {
                "name": "size-more-button",
                "description": "Defines the size of the \"More\" button.",
                "value": { "type": "\"Small\" | \"Medium\"" }
              },
              {
                "name": "mode",
                "description": "Defines the mode of the component.",
                "value": { "type": "\"Light\" | \"Dark\"" }
              },
              {
                "name": "icon-without-background",
                "description": "Defines the background color of the component.",
                "value": { "type": "boolean" }
              }
            ],
            "events": [
              {
                "name": "click",
                "description": "Fires when the tab was clicked."
              }
            ]
          }
        },
        {
          "name": "udex-tag",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-tag</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Tag.js\";</code>\n---\n\n\n### **Events:**\n - **selectionChange** - Emitted when tag was clicked\n- **iconClick** - Emitted when icon in tag was clicked",
          "doc-url": "",
          "attributes": [
            {
              "name": "text",
              "description": "Defines the text of the tag",
              "value": { "type": "string" }
            },
            {
              "name": "design",
              "description": "Defines the design type of tag",
              "value": { "type": "TagType | undefined" }
            },
            {
              "name": "icon",
              "description": "Defines icon name",
              "value": { "type": "string" }
            },
            {
              "name": "icon-placement",
              "description": "Defines icon placement if icon was provided",
              "value": { "type": "IconPlacement | undefined" }
            },
            {
              "name": "read-only",
              "description": "Defines if tag is in readnly state",
              "value": { "type": "boolean" }
            },
            {
              "name": "accessible-role",
              "description": "Defines the role attribute of component",
              "value": { "type": "string" }
            }
          ],
          "events": [
            {
              "name": "selectionChange",
              "description": "Emitted when tag was clicked"
            },
            {
              "name": "iconClick",
              "description": "Emitted when icon in tag was clicked"
            }
          ],
          "js": {
            "properties": [
              {
                "name": "text",
                "description": "Defines the text of the tag",
                "value": { "type": "string" }
              },
              {
                "name": "design",
                "description": "Defines the design type of tag",
                "value": { "type": "TagType | undefined" }
              },
              {
                "name": "icon",
                "description": "Defines icon name",
                "value": { "type": "string" }
              },
              {
                "name": "icon-placement",
                "description": "Defines icon placement if icon was provided",
                "value": { "type": "IconPlacement | undefined" }
              },
              {
                "name": "read-only",
                "description": "Defines if tag is in readnly state",
                "value": { "type": "boolean" }
              },
              {
                "name": "accessible-role",
                "description": "Defines the role attribute of component",
                "value": { "type": "string" }
              }
            ],
            "events": [
              {
                "name": "selectionChange",
                "description": "Emitted when tag was clicked"
              },
              {
                "name": "iconClick",
                "description": "Emitted when icon in tag was clicked"
              }
            ]
          }
        },
        {
          "name": "udex-text-field",
          "description": "\n---\n",
          "doc-url": "",
          "attributes": [
            {
              "name": "disabled",
              "description": "Defines whether the component is in disabled state.\n<br><br>\n<b>Note:</b> A disabled component is completely noninteractive.",
              "value": { "type": "boolean" }
            },
            {
              "name": "value",
              "description": "Defines the value of the component.\n<br><br>\n<b>Note:</b> The property is updated upon typing.",
              "value": { "type": "string" }
            },
            {
              "name": "maxlength",
              "description": "Sets the maximum number of characters available in the input field.\n<br><br>\n<b>Note:</b> This property is not compatible with the ui5-input type InputType.Number. If the ui5-input type is set to Number, the maxlength value is ignored.",
              "value": { "type": "number | undefined" }
            },
            {
              "name": "label",
              "description": "Defines label text for the input field.",
              "value": { "type": "string" }
            },
            {
              "name": "readonly",
              "description": "Defines whether the component is read-only.\n<br><br>\n<b>Note:</b> A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
              "value": { "type": "boolean" }
            },
            {
              "name": "displayonly",
              "description": "Defines whether the component is display-only.\n<br><br>\n<b>Note:</b> A display-only component is not editable,\nbut still provides visual feedback upon user interaction, input border is not visible.",
              "value": { "type": "boolean" }
            },
            {
              "name": "required",
              "description": "Defines whether the component is required.",
              "value": { "type": "boolean" }
            },
            {
              "name": "value-state",
              "description": "Defines the value state of the component.",
              "value": {
                "type": "\"Warning\" | \"Standard\" | \"Error\" | \"Success\""
              }
            },
            {
              "name": "direction",
              "description": "Defines direction of the input.",
              "value": { "type": "\"left\" | \"right\" | undefined" }
            },
            {
              "name": "supporting-text",
              "description": "Defines supporting text under the input field.",
              "value": { "type": "string" }
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "disabled",
                "description": "Defines whether the component is in disabled state.\n<br><br>\n<b>Note:</b> A disabled component is completely noninteractive.",
                "value": { "type": "boolean" }
              },
              {
                "name": "value",
                "description": "Defines the value of the component.\n<br><br>\n<b>Note:</b> The property is updated upon typing.",
                "value": { "type": "string" }
              },
              {
                "name": "maxlength",
                "description": "Sets the maximum number of characters available in the input field.\n<br><br>\n<b>Note:</b> This property is not compatible with the ui5-input type InputType.Number. If the ui5-input type is set to Number, the maxlength value is ignored.",
                "value": { "type": "number | undefined" }
              },
              {
                "name": "label",
                "description": "Defines label text for the input field.",
                "value": { "type": "string" }
              },
              {
                "name": "readonly",
                "description": "Defines whether the component is read-only.\n<br><br>\n<b>Note:</b> A read-only component is not editable,\nbut still provides visual feedback upon user interaction.",
                "value": { "type": "boolean" }
              },
              {
                "name": "displayonly",
                "description": "Defines whether the component is display-only.\n<br><br>\n<b>Note:</b> A display-only component is not editable,\nbut still provides visual feedback upon user interaction, input border is not visible.",
                "value": { "type": "boolean" }
              },
              {
                "name": "required",
                "description": "Defines whether the component is required.",
                "value": { "type": "boolean" }
              },
              {
                "name": "value-state",
                "description": "Defines the value state of the component.",
                "value": {
                  "type": "\"Warning\" | \"Standard\" | \"Error\" | \"Success\""
                }
              },
              {
                "name": "direction",
                "description": "Defines direction of the input.",
                "value": { "type": "\"left\" | \"right\" | undefined" }
              },
              {
                "name": "supporting-text",
                "description": "Defines supporting text under the input field.",
                "value": { "type": "string" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-tile",
          "description": "\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the component.",
          "doc-url": "",
          "attributes": [
            {
              "name": "hide-shadow",
              "description": "Defines display the shadow for the Tile.",
              "value": { "type": "boolean" }
            },
            {
              "name": "interactive",
              "description": "Defines if the component would be interactive,\ne.g. gets hover effect, gets focus outline and <code>click</code> event is fired, when pressed.",
              "value": { "type": "boolean", "default": "false" }
            },
            {
              "name": "href",
              "description": "Defines the component href.\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
              "value": { "type": "string" }
            },
            {
              "name": "target",
              "description": "Defines the component target.\n<br><br>\n<b>Notes:</b>\n\n<ul>\n<li><code>_self</code></li>\n<li><code>_top</code></li>\n<li><code>_blank</code></li>\n<li><code>_parent</code></li>\n<li><code>_search</code></li>\n</ul>\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
              "value": { "type": "string" }
            },
            {
              "name": "accessible-name",
              "description": "Defines the component aria-label accessibility attribute.\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
              "value": { "type": "string" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "hide-shadow",
                "description": "Defines display the shadow for the Tile.",
                "value": { "type": "boolean" }
              },
              {
                "name": "interactive",
                "description": "Defines if the component would be interactive,\ne.g. gets hover effect, gets focus outline and <code>click</code> event is fired, when pressed.",
                "value": { "type": "boolean" }
              },
              {
                "name": "href",
                "description": "Defines the component href.\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
                "value": { "type": "string" }
              },
              {
                "name": "target",
                "description": "Defines the component target.\n<br><br>\n<b>Notes:</b>\n\n<ul>\n<li><code>_self</code></li>\n<li><code>_top</code></li>\n<li><code>_blank</code></li>\n<li><code>_parent</code></li>\n<li><code>_search</code></li>\n</ul>\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
                "value": { "type": "string" }
              },
              {
                "name": "accessible-name",
                "description": "Defines the component aria-label accessibility attribute.\n\n<b>This property must only be used when the <code>interactive</code> property is set.</b>",
                "value": { "type": "string" }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-toast",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n\n<h3>Usage</h3>\n\nFor the <code>udex-toast</code>\n<h3>ES6 Module Import</h3>\n\n<code>import \"@udex/web-components/dist/Toast.js\";</code>\n---\n\n\n### **Events:**\n - **close** - Emit when close icon was clicked\n\n### **Methods:**\n - **show(): _void_** - Shows the component.\n\n### **Slots:**\n - **default** - Defines the content of the component",
          "doc-url": "",
          "attributes": [
            {
              "name": "value-state",
              "description": "Defines design state of component",
              "value": { "type": "ValueState" }
            },
            {
              "name": "hide-close-icon",
              "description": "Defines if close icon should be visible",
              "value": { "type": "boolean" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component"
            }
          ],
          "events": [
            {
              "name": "close",
              "description": "Emit when close icon was clicked"
            }
          ],
          "js": {
            "properties": [
              {
                "name": "value-state",
                "description": "Defines design state of component",
                "value": { "type": "ValueState" }
              },
              {
                "name": "hide-close-icon",
                "description": "Defines if close icon should be visible",
                "value": { "type": "boolean" }
              }
            ],
            "events": [
              {
                "name": "close",
                "description": "Emit when close icon was clicked"
              }
            ]
          }
        },
        {
          "name": "udex-tooltip",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\n<h3>Usage</h3>\n\nFor the <code>udex-tooltip</code>\n<h3>ES6 Module Import</h3>\n\n<code>import @udex/web-components/dist/Tooltip.js\";</code>\n---\n\n\n### **Slots:**\n - **default** - Defines the content of the component.",
          "doc-url": "",
          "attributes": [
            {
              "name": "title",
              "description": "Defines the Tooltip title.",
              "value": { "type": "string" }
            },
            {
              "name": "hide-arrow",
              "description": "Defines if Tooltip has an arrow or not.",
              "value": { "type": "boolean" }
            },
            {
              "name": "placement",
              "description": "Determines on which side of the component the Tooltip is displayed.",
              "value": { "type": "\"Left\" | \"Right\" | \"Top\" | \"Bottom\"" }
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Defines the content of the component."
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "title",
                "description": "Defines the Tooltip title.",
                "value": { "type": "string" }
              },
              {
                "name": "hide-arrow",
                "description": "Defines if Tooltip has an arrow or not.",
                "value": { "type": "boolean" }
              },
              {
                "name": "placement",
                "description": "Determines on which side of the component the Tooltip is displayed.",
                "value": {
                  "type": "\"Left\" | \"Right\" | \"Top\" | \"Bottom\""
                }
              }
            ],
            "events": []
          }
        },
        {
          "name": "udex-truncated-text",
          "description": "<h3 class=\"comment-api-title\">Overview</h3>\n\nThe <code> udex-truncated-text </code> component is a component used to limit and toggle text visibility.\n---\n",
          "doc-url": "",
          "attributes": [
            {
              "name": "initially-expanded",
              "description": "Defines if the text is initially expanded.",
              "value": { "type": "boolean" }
            },
            {
              "name": "text",
              "description": "Indicates the element text",
              "value": { "type": "string" }
            },
            {
              "name": "char-limit",
              "description": "Indicates the limit for chars",
              "value": { "type": "Integer" }
            }
          ],
          "events": [],
          "js": {
            "properties": [
              {
                "name": "initially-expanded",
                "description": "Defines if the text is initially expanded.",
                "value": { "type": "boolean" }
              },
              {
                "name": "text",
                "description": "Indicates the element text",
                "value": { "type": "string" }
              },
              {
                "name": "char-limit",
                "description": "Indicates the limit for chars",
                "value": { "type": "Integer" }
              }
            ],
            "events": []
          }
        }
      ]
    },
    "css": {
      "properties": [],
      "pseudo-elements": []
    }
  }
}
