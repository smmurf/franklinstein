{"version":3,"file":"Tile.js","sourceRoot":"","sources":["../src/Tile.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,UAAU,MAAM,4CAA4C,CAAC;AACpE,OAAO,aAAa,MAAM,0DAA0D,CAAC;AACrF,OAAO,QAAQ,MAAM,qDAAqD,CAAC;AAC3E,OAAO,IAAI,MAAM,iDAAiD,CAAC;AACnE,OAAO,SAAS,MAAM,sDAAsD,CAAC;AAC7E,OAAO,EAAE,OAAO,EAAE,MAAM,sCAAsC,CAAC;AAE/D,OAAO,YAAY,MAAM,2CAA2C,CAAC;AAErE,SAAS;AACT,OAAO,OAAO,MAAM,gCAAgC,CAAC;AAIrD;;;;;;;;GAQG;AAOH,IAAM,IAAI,GAAV,MAAM,IAAK,SAAQ,UAAU;IAgF3B,UAAU,CAAC,CAAgB;QACzB,IAAI,OAAO,CAAC,CAAC,CAAC,EAAE;YACd,MAAM,SAAS,GAAe,IAAI,CAAC,UAAU,EAAE,aAAa,CAAC,aAAa,CAAC,CAAC;YAE5E,IAAI,SAAS,EAAE;gBACb,CAAC,CAAC,cAAc,EAAE,CAAC,CAAC,oBAAoB;gBACxC,SAAS,CAAC,KAAK,EAAE,CAAC;aACnB;SACF;IACH,CAAC;CACF,CAAA;AAjFC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACP;AASrB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;yCACN;AActB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kCACb;AAwBd;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;oCACX;AAYhB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;4CACH;AAUF;IAArB,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;qCAAgB;AA9EjC,IAAI;IANT,aAAa,CAAC;QACb,GAAG,EAAE,WAAW;QAChB,QAAQ,EAAE,SAAS;QACnB,MAAM,EAAE,OAAO;QACf,QAAQ,EAAE,YAAY;KACvB,CAAC;GACI,IAAI,CA0FT;AAED,IAAI,CAAC,MAAM,EAAE,CAAC;AAEd,eAAe,IAAI,CAAC","sourcesContent":["import UI5Element from \"@ui5/webcomponents-base/dist/UI5Element.js\";\nimport customElement from \"@ui5/webcomponents-base/dist/decorators/customElement.js\";\nimport property from \"@ui5/webcomponents-base/dist/decorators/property.js\";\nimport slot from \"@ui5/webcomponents-base/dist/decorators/slot.js\";\nimport litRender from \"@ui5/webcomponents-base/dist/renderer/LitRenderer.js\";\nimport { isSpace } from \"@ui5/webcomponents-base/dist/Keys.js\";\n\nimport TileTemplate from \"./generated/templates/TileTemplate.lit.js\";\n\n// Styles\nimport TileCss from \"./generated/themes/Tile.css.js\";\n\ntype AnchorNode = HTMLAnchorElement | undefined | null;\n\n/**\n * @class\n *\n * @constructor\n * @alias udex.components.Tile\n * @extends sap.ui.webc.base.UI5Element\n * @tagname udex-tile\n * @public\n */\n@customElement({\n  tag: \"udex-tile\",\n  renderer: litRender,\n  styles: TileCss,\n  template: TileTemplate,\n})\nclass Tile extends UI5Element {\n  /**\n   * Defines display the shadow for the Tile.\n   *\n   * @type {string}\n   * @name udex.components.Tile.prototype.hideShadow\n   * @public\n   */\n  @property({ type: Boolean })\n  hideShadow!: boolean;\n\n  /**\n   * Defines if the component would be interactive,\n   * e.g. gets hover effect, gets focus outline and <code>click</code> event is fired, when pressed.\n   * @default false\n   * @public\n   */\n  @property({ type: Boolean })\n  interactive!: boolean;\n\n  /**\n   * Defines the component href.\n   *\n   * <b>This property must only be used when the <code>interactive</code> property is set.</b>\n   *\n   * @type {string}\n   * @name udex.components.Tile.prototype.href\n   * <br><br>\n   * <b>Note:</b> Standard hyperlink behavior is supported.\n   * @public\n   */\n  @property({ type: String })\n  href!: string;\n\n  /**\n   * Defines the component target.\n   * <br><br>\n   * <b>Notes:</b>\n   *\n   * <ul>\n   * <li><code>_self</code></li>\n   * <li><code>_top</code></li>\n   * <li><code>_blank</code></li>\n   * <li><code>_parent</code></li>\n   * <li><code>_search</code></li>\n   * </ul>\n   *\n   * <b>This property must only be used when the <code>interactive</code> property is set.</b>\n   *\n   * @type {string}\n   * @name udex.components.Tile.prototype.target\n   * <br><br>\n   * <b>Note:</b> Standard hyperlink behavior is supported.\n   * @public\n   */\n  @property({ type: String })\n  target!: string;\n\n  /**\n   * Defines the component aria-label accessibility attribute.\n   *\n   * <b>This property must only be used when the <code>interactive</code> property is set.</b>\n   *\n   * @type {string}\n   * @name udex.components.Tile.prototype.accessibleName\n   * @public\n   */\n  @property({ type: String })\n  accessibleName!: string;\n\n  /**\n   * Defines the content of the component.\n   *\n   * @type {Node}\n   * @name udex.components.Tile.prototype.default\n   * @slot\n   * @public\n   */\n  @slot({ type: Node }) default!: Node;\n\n  _onkeydown(e: KeyboardEvent) {\n    if (isSpace(e)) {\n      const component: AnchorNode = this.shadowRoot?.querySelector(\"a.udex-tile\");\n\n      if (component) {\n        e.preventDefault(); // prevent scrolling\n        component.click();\n      }\n    }\n  }\n}\n\nTile.define();\n\nexport default Tile;\n"]}