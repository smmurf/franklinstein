var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import Popover from "@ui5/webcomponents/dist/Popover.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import browserScrollbarCSS from "@ui5/webcomponents/dist/generated/themes/BrowserScrollbar.css.js";
import DropdownTemplate from "./generated/templates/DropdownTemplate.lit.js";
// Styles
import DropdownCss from "./generated/themes/Dropdown.css";
var PlacementType;
(function (PlacementType) {
    PlacementType["Left"] = "Left";
    PlacementType["Right"] = "Right";
    PlacementType["Top"] = "Top";
    PlacementType["Bottom"] = "Bottom";
})(PlacementType || (PlacementType = {}));
export var HorizontalAlign;
(function (HorizontalAlign) {
    HorizontalAlign["Center"] = "Center";
    HorizontalAlign["Left"] = "Left";
    HorizontalAlign["Right"] = "Right";
    HorizontalAlign["Stretch"] = "Stretch";
})(HorizontalAlign || (HorizontalAlign = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-dropdown</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Dropdown.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias sap.ui.webc.web-components.Dropdown
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-dropdown
 * @public
 */
let Dropdown = class Dropdown extends UI5Element {
    getDropdownPane() {
        return this.shadowRoot.querySelector("[ui5-popover]");
    }
    getTrigger() {
        return this.querySelector("[slot=trigger]");
    }
    onTriggerClick() {
        const dropdown = this.getDropdownPane();
        const opener = this.getTrigger();
        dropdown.showAt(opener);
        this.fireEvent("click-trigger");
    }
    onOpen(opener) {
        const dropdown = this.getDropdownPane();
        dropdown.showAt(opener);
    }
    onClose() {
        const dropdown = this.getDropdownPane();
        dropdown.close(true);
    }
    get hasTriggerSlot() {
        return !!this.trigger.length;
    }
    get hasHeaderSlot() {
        return !!this.header.length;
    }
    get hasFooterSlot() {
        return !!this.footer.length;
    }
    afterDropdownClose() {
        this.open = false;
        this.fireEvent("after-close");
    }
    afterDropdownOpen() {
        this.open = true;
        this.fireEvent("after-open");
    }
    beforeDropdownOpen() {
        this.fireEvent("before-open");
    }
    beforeDropdownClose() {
        this.fireEvent("before-close");
    }
    get holderWeight() {
        return this.width ? this.width : "auto";
    }
};
__decorate([
    property({ type: PlacementType, defaultValue: PlacementType.Bottom })
], Dropdown.prototype, "placementType", void 0);
__decorate([
    property({ type: HorizontalAlign, defaultValue: HorizontalAlign.Left })
], Dropdown.prototype, "horizontalAlign", void 0);
__decorate([
    slot({ type: HTMLElement, "default": true })
], Dropdown.prototype, "content", void 0);
__decorate([
    slot({ type: HTMLElement })
], Dropdown.prototype, "header", void 0);
__decorate([
    slot({ type: HTMLElement })
], Dropdown.prototype, "footer", void 0);
__decorate([
    slot({ type: HTMLElement })
], Dropdown.prototype, "trigger", void 0);
__decorate([
    property({ type: Boolean })
], Dropdown.prototype, "open", void 0);
__decorate([
    property({ type: String })
], Dropdown.prototype, "width", void 0);
Dropdown = __decorate([
    customElement({
        tag: "udex-dropdown",
        renderer: litRender,
        styles: [
            DropdownCss,
            browserScrollbarCSS,
        ],
        template: DropdownTemplate,
        dependencies: [Popover],
    })
    /**
     * Fired event when the user clicks the trigger.
     *
     * @event sap.ui.webc.web-components.Dropdown#clickTrigger
     * @public
     */
    ,
    event("click-trigger")
    /**
     * Fired before the dropdown is opened.
     *
     * @event sap.ui.webc.web-components.Dropdown#beforeOpen
     * @public
     */
    ,
    event("before-open")
    /**
     * Fired after the dropdown is opened.
     *
     * @event sap.ui.webc.web-components.Dropdown#afterOpen
     * @public
     */
    ,
    event("after-open")
    /**
     * Fired before the menu is closed.
     *
     * @event sap.ui.webc.web-components.Dropdown#beforeClose
     * @public
     */
    ,
    event("before-close")
    /**
     * Fired after the menu is closed.
     *
     * @event sap.ui.webc.web-components.Dropdown#afterClose
     * @public
     */
    ,
    event("after-close")
], Dropdown);
Dropdown.define();
export default Dropdown;
//# sourceMappingURL=Dropdown.js.map