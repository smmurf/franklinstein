var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Accordion_1;
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import { getI18nBundle } from "@ui5/webcomponents-base/dist/i18nBundle.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents-icons/dist/feeder-arrow.js";
import AccordionTemplate from "./generated/templates/AccordionTemplate.lit.js";
// Styles
import AccordionCss from "./generated/themes/Accordion.css.js";
import { COLLAPSE_ALL, EXPAND_ALL } from "./generated/i18n/i18n-defaults.js";
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-accordion</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import @udex/web-components/dist/Accordion.js";</code>
 *
 * @constructor
 * @author SAP SE
 * @alias udex.components.Accordion
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-accordion
 * @public
 */
let Accordion = Accordion_1 = class Accordion extends UI5Element {
    constructor() {
        super();
        this._allExpanded = false;
        this._activeItemIndex = -1;
    }
    static async onDefine() {
        Accordion_1.i18nBundle = await getI18nBundle("sap-ui-webcomponents-bundle");
    }
    get accordionClass() {
        let classes = "udex-accordion";
        if (this._direction === "rtl") {
            classes = `${classes} udex-accordion--${this._direction}`;
        }
        return classes;
    }
    get toggleAllText() {
        return this._allExpanded
            ? Accordion_1.i18nBundle.getText(COLLAPSE_ALL)
            : Accordion_1.i18nBundle.getText(EXPAND_ALL);
    }
    get isExpanded() {
        return this._allExpanded;
    }
    get items() {
        return this._items.map(el => {
            return {
                item: el,
            };
        });
    }
    get headlineText() {
        return this.headline ? this.headline : "Default headline";
    }
    toggleAllHandler(e) {
        e.preventDefault();
        this.fireEvent("toggle-items", { isOpen: this._allExpanded });
        this._allExpanded = !this._allExpanded;
    }
    keydownHandler(e) {
        if (e.key !== "Tab") {
            e.preventDefault();
        }
        const len = this._items.length;
        const focusOnItem = (itemIndex) => {
            const item = this._items[itemIndex];
            this._activeItemIndex = itemIndex;
            item?.shadowRoot?.querySelector(".udex-accordion-item__header")?.focus();
        };
        switch (e.key) {
            case "Home":
                focusOnItem(0);
                break;
            case "End":
                focusOnItem(len - 1);
                break;
            case "ArrowUp":
                if (this._activeItemIndex > 0) {
                    focusOnItem(this._activeItemIndex - 1);
                }
                else if (this._activeItemIndex === 0) {
                    focusOnItem(len - 1);
                }
                break;
            case "ArrowDown":
                if (this._activeItemIndex < len - 1) {
                    focusOnItem(this._activeItemIndex + 1);
                }
                else if (this._activeItemIndex === len - 1) {
                    focusOnItem(0);
                }
                break;
            default:
                break;
        }
    }
    itemFocusHandler(e) {
        const target = e.target;
        if (target) {
            this._activeItemIndex = this._items?.indexOf(target) ?? -1;
        }
    }
    onAfterRendering() {
        const accordion = this.shadowRoot?.querySelector(".udex-accordion");
        if (accordion) {
            const directionStyles = window
                .getComputedStyle(accordion)
                .getPropertyValue("direction");
            if (!directionStyles) {
                this._direction = "ltr";
            }
            else {
                this._direction = directionStyles;
            }
        }
    }
};
__decorate([
    property({ type: Boolean, noAttribute: true })
], Accordion.prototype, "_allExpanded", void 0);
__decorate([
    property({ type: String })
], Accordion.prototype, "_direction", void 0);
__decorate([
    property({ type: String })
], Accordion.prototype, "headline", void 0);
__decorate([
    slot({ type: HTMLElement, "default": true, individualSlots: true })
], Accordion.prototype, "_items", void 0);
Accordion = Accordion_1 = __decorate([
    customElement({
        tag: "udex-accordion",
        renderer: litRender,
        styles: AccordionCss,
        template: AccordionTemplate,
        dependencies: [],
    })
    /**
     * Triggered when the user click on on Expand/Collapse All button.
     *
     * @event sap.ui.webc.web-components.Accordion#toggleItems
     * @public
     */
    ,
    event("toggle-items", {
        detail: {
            isOpen: { type: Boolean },
        },
    })
], Accordion);
Accordion.define();
export default Accordion;
//# sourceMappingURL=Accordion.js.map