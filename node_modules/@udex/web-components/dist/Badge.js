var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import slot from "@ui5/webcomponents-base/dist/decorators/slot.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import "@ui5/webcomponents/dist/Badge.js";
import BadgeTemplate from "./generated/templates/BadgeTemplate.lit.js";
// Styles
import BadgeCss from "./generated/themes/Badge.css.js";
var BadgeType;
(function (BadgeType) {
    BadgeType["text"] = "Text";
    BadgeType["number"] = "Number";
})(BadgeType || (BadgeType = {}));
var BadgeSize;
(function (BadgeSize) {
    BadgeSize["small"] = "Small";
    BadgeSize["large"] = "Large";
})(BadgeSize || (BadgeSize = {}));
var BadgeTextDesign;
(function (BadgeTextDesign) {
    BadgeTextDesign["Info"] = "Info";
    BadgeTextDesign["Success"] = "Success";
    BadgeTextDesign["Error"] = "Error";
    BadgeTextDesign["Warning"] = "Warning";
})(BadgeTextDesign || (BadgeTextDesign = {}));
var BadgeNumberDesign;
(function (BadgeNumberDesign) {
    BadgeNumberDesign["Blue"] = "Blue";
    BadgeNumberDesign["Red"] = "Red";
    BadgeNumberDesign["White"] = "White";
})(BadgeNumberDesign || (BadgeNumberDesign = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 *
 * <h3>Usage</h3>
 *
 * For the <code>udex-badge</code>
 * <h3>ES6 Module Import</h3>
 *
 * <code>import "@udex/web-components/dist/Badge.js";</code>
 *
 * @constructor
 * @extends UI5Element
 * @public
 */
let Badge = class Badge extends UI5Element {
    constructor() {
        super(...arguments);
        /**
         * Defines the design of text type component.
         *
         * @default BadgeTextDesign.Info
         * @public
         */
        this.design = BadgeTextDesign.Info;
    }
    get textType() {
        return this.type === BadgeType.text;
    }
    get textClasses() {
        return `udex-badge udex-badge--text udex-badge--${this.design.toLowerCase()} udex-badge--${this.size.toLowerCase()}`;
    }
    get numberClasses() {
        return `udex-badge udex-badge--number udex-badge--${this.numberDesign.toLowerCase()} udex-badge--${this.size.toLowerCase()}`;
    }
};
__decorate([
    property({ defaultValue: BadgeType.text })
], Badge.prototype, "type", void 0);
__decorate([
    property({ defaultValue: BadgeSize.large })
], Badge.prototype, "size", void 0);
__decorate([
    property({ defaultValue: BadgeTextDesign.Info })
], Badge.prototype, "design", void 0);
__decorate([
    property({ defaultValue: BadgeNumberDesign.Blue })
], Badge.prototype, "numberDesign", void 0);
__decorate([
    slot({ type: Node, "default": true })
], Badge.prototype, "default", void 0);
Badge = __decorate([
    customElement({
        tag: "udex-badge",
        renderer: litRender,
        styles: BadgeCss,
        template: BadgeTemplate,
        dependencies: [],
    })
], Badge);
Badge.define();
export default Badge;
//# sourceMappingURL=Badge.js.map