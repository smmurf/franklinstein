import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import "@ui5/webcomponents/dist/Button.js";
import "@ui5/webcomponents-icons/dist/AllIcons.js";
declare class Button extends UI5Element {
    /**
     * Defines whether the component is in disabled state.
     * <br><br>
     * <b>Note:</b> A disabled component is completely noninteractive.
     * @type {boolean}
     * @name sap.ui.webc.udex.Button.prototype.disabled
     * @defaultvalue false
     * @public
     */
    disabled: boolean;
    /**
     * Defines the size of the component.
     * <br><br>
     * <b>Note:</b> There are three different sizes to choose from.
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.size
     * @defaultvalue "cozy"
     * @public
     */
    size: string;
    /**
     * Defines the tooltip of the component.
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.tooltip
     * @defaultvalue ""
     * @public
     */
    tooltip: string;
    /**
     * Defines the design of the component.
     * <br><br>
     * <b>Note:</b> The color-schema is different for each design.
     *
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.design
     * @defaultvalue "primary"
     * @public
     */
    design: "Primary" | "Secondary" | "Tertiary" | "Positive" | "Negative" | "Warning";
    /**
     * TODO:Beschreibung
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.size
     * @defaultvalue "cozy"
     * @public
     */
    icon: "Small" | "Medium" | "Large";
    /**
     * Controls if the buttons will only show an icon and no text
     * <br><br>
     * <b>Note:</b> It should be provided an icon with the "icon" property
     * @type {boolean}
     * @name sap.ui.webc.udex.Button.prototype.iconOnly
     * @defaultvalue false
     * @public
     */
    iconOnly: boolean;
    /**
     * Renders the slot with name "icon" before or after the buttonlabel.
     * <br><br>
     * <b>Note:</b> Only has effect if a slot with name "icon" is provided
     * @type {boolean}
     * @name sap.ui.webc.udex.Button.prototype.iconEnd
     * @defaultvalue false
     * @public
     */
    iconEnd: boolean;
    /**
     * Sets a toggled state of the component.
     * <br><br>
     * <b>Note:</b> The Color-schema is different in toggled state.
     * @type {boolean}
     * @name sap.ui.webc.udex.Button.prototype.toggled
     * @defaultvalue false
     * @public
     */
    toggled: boolean;
    /**
     * Controls id of the element that label the component
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.accessibleNameRef
     * @defaultvalue ""
     * @public
     */
    accessibleNameRef: string;
    /**
     * Controls the ARIA name of the button
     * @type {string}
     * @name sap.ui.webc.udex.Button.prototype.accessibleName
     * @defaultvalue ""
     * @public
     */
    accessibleName: string;
    /**
     * Defines the label of the component.
     * <br><br>
     * <b>Note:</b> Provide an "icon"-slot and an empty label to create an icon-only button.
     * @type {Node}
     * @name sap.ui.webc.udex.Button.prototype.default
     * @defaultvalue undefined
     * @public
     */
    default: Node;
    onButtonClick(e: Event): void;
    get renderIconOnlyButton(): boolean;
    get sizeClass(): "udex-button--small" | "udex-button--medium" | "udex-button--large";
}
export default Button;
