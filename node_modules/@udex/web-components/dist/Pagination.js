var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Pagination_1;
import UI5Element from "@ui5/webcomponents-base/dist/UI5Element.js";
import customElement from "@ui5/webcomponents-base/dist/decorators/customElement.js";
import property from "@ui5/webcomponents-base/dist/decorators/property.js";
import event from "@ui5/webcomponents-base/dist/decorators/event.js";
import litRender from "@ui5/webcomponents-base/dist/renderer/LitRenderer.js";
import Integer from "@ui5/webcomponents-base/dist/types/Integer.js";
import { getI18nBundle } from "@ui5/webcomponents-base/dist/i18nBundle.js";
import { OF } from "./generated/i18n/i18n-defaults.js";
import "@ui5/webcomponents/dist/Icon.js";
import "@ui5/webcomponents-icons/dist/nav-back.js";
import "@ui5/webcomponents-icons/dist/navigation-right-arrow.js";
import "@ui5/webcomponents-icons/dist/open-command-field.js";
import "@ui5/webcomponents-icons/dist/close-command-field.js";
// Template
import PaginationTemplate from "./generated/templates/PaginationTemplate.lit.js";
// Styles
import PaginationCss from "./generated/themes/Pagination.css";
var PaginationType;
(function (PaginationType) {
    PaginationType["full"] = "full";
    PaginationType["short"] = "short";
})(PaginationType || (PaginationType = {}));
var DisplayType;
(function (DisplayType) {
    DisplayType["desktop"] = "desktop";
    DisplayType["mobile"] = "mobile";
})(DisplayType || (DisplayType = {}));
/**
 * @class
 *
 * <h3 class="comment-api-title">Overview</h3>
 *
 * The <code>udex-pagination</code> component is a pagination component used to navigate thought the pages.
 *
 * @constructor
 * @alias udex.components.Pagination
 * @extends sap.ui.webc.base.UI5Element
 * @tagname udex-pagination
 * @public
 */
let Pagination = Pagination_1 = class Pagination extends UI5Element {
    constructor() {
        super();
        this._pages = [];
        this._currentPageIndex = 0;
        this._mobileDisplayNumber = 5;
    }
    get nextButtonDisbled() {
        return this._currentPageIndex + 1 === this.pages;
    }
    get prevButtonDisbled() {
        return this._currentPageIndex === 0;
    }
    get typeFull() {
        return (this.type === PaginationType.full || this.display === DisplayType.mobile);
    }
    get typeShort() {
        return (this.type === PaginationType.short && this.display !== DisplayType.mobile);
    }
    get shortTextStart() {
        if (!this.pages) {
            return "";
        }
        return `${this._currentPageIndex + 1}`;
    }
    get shortTextEnd() {
        if (!this.pages) {
            return "";
        }
        return `${this.pages}`;
    }
    get shortTextSeparator() {
        if (!this.pages) {
            return "";
        }
        return ` ${Pagination_1.i18nBundle.getText(OF)} `;
    }
    get pagination() {
        return this.setupPages(this.pages);
    }
    get paginationClass() {
        let classes = "udex-pagination";
        if (this._direction === "rtl") {
            classes = `${classes} udex-pagination--${this._direction}`;
        }
        if (!this.display) {
            return classes;
        }
        return `${classes} udex-pagination--${this.display}`;
    }
    static async onDefine() {
        Pagination_1.i18nBundle = await getI18nBundle("sap-ui-webcomponents-bundle");
    }
    setActive(element) {
        const pageIndex = element.getAttribute("index")
            ? parseInt(element.getAttribute("index") || "")
            : null;
        if (pageIndex === null) {
            return;
        }
        element.setAttribute("aria-current", "page");
        this._currentPageIndex = pageIndex;
        this._previousPageElement?.removeAttribute("aria-current");
        this._previousPageElement = element;
    }
    setNextPage(e) {
        e.preventDefault();
        const currentPage = this._currentPageIndex ?? 1;
        if (this.pages && currentPage >= this.pages - 1) {
            return;
        }
        this._currentPageIndex = currentPage + 1;
        this.emitChangeEvent();
    }
    setPrevPage(e) {
        e.preventDefault();
        const currentPage = this._currentPageIndex ?? 1;
        if (this.pages && currentPage <= 0) {
            return;
        }
        this._currentPageIndex -= 1;
        this.emitChangeEvent();
    }
    setFirstPage(e) {
        e.preventDefault();
        const currentPage = this._currentPageIndex ?? 1;
        if (currentPage === 0) {
            return;
        }
        this._currentPageIndex = 0;
        this.emitChangeEvent();
    }
    setLastPage(e) {
        e.preventDefault();
        const currentPage = this._currentPageIndex ?? 1;
        if (!this.pages || currentPage >= this.pages - 1) {
            return;
        }
        this._currentPageIndex = this.pages - 1;
        this.emitChangeEvent();
    }
    setupMobilePages(pages) {
        const pagesCollection = [];
        let startIndex;
        let endIndex;
        const offset = Math.floor(this._mobileDisplayNumber / 2);
        if (pages <= this._mobileDisplayNumber) {
            startIndex = 0;
            endIndex = pages;
        }
        else {
            const displayStartNumber = this._currentPageIndex < offset ? 0 : this._currentPageIndex - offset;
            startIndex = this._currentPageIndex <= pages - offset - 1
                ? displayStartNumber
                : pages - this._mobileDisplayNumber;
            const displayEndNumber = this._currentPageIndex < offset
                ? this._mobileDisplayNumber
                : this._currentPageIndex + this._mobileDisplayNumber - offset;
            endIndex = this._currentPageIndex <= pages - offset ? displayEndNumber : pages;
        }
        for (let index = startIndex; index < endIndex && index < pages; index++) {
            const isCurrent = index === this._currentPageIndex;
            pagesCollection.push({
                index,
                value: index + 1,
                active: isCurrent,
            });
        }
        return pagesCollection;
    }
    setupDesktopPages(pages) {
        const pagesCollection = [];
        for (let index = 0; index < pages; index++) {
            const isCurrent = index === this._currentPageIndex;
            pagesCollection.push({
                index,
                value: index + 1,
                active: isCurrent,
            });
        }
        return pagesCollection;
    }
    setupPages(pages) {
        if (!pages) {
            return [];
        }
        if (this.display === DisplayType.mobile) {
            return this.setupMobilePages(pages);
        }
        return this.setupDesktopPages(pages);
    }
    onPageClick(e) {
        e.preventDefault();
        const target = e.target;
        const element = target !== e.currentTarget ? target.parentNode : target;
        if (element.getAttribute("active") !== null) {
            return;
        }
        this.setActive(element);
        this.emitChangeEvent();
    }
    emitChangeEvent() {
        this.fireEvent("change", { currentPage: this._currentPageIndex + 1 });
    }
    onAfterRendering() {
        if (this.type === PaginationType.full) {
            return;
        }
        const shortPaginationElement = this.shadowRoot?.querySelector(".udex-pagination__item--short");
        if (!shortPaginationElement) {
            return;
        }
        const directionStyles = window
            .getComputedStyle(shortPaginationElement)
            .getPropertyValue("direction");
        if (!directionStyles) {
            this._direction = "ltr";
        }
        else {
            this._direction = directionStyles;
        }
    }
};
__decorate([
    property({ validator: Integer })
], Pagination.prototype, "pages", void 0);
__decorate([
    property({ defaultValue: PaginationType.full, type: PaginationType })
], Pagination.prototype, "type", void 0);
__decorate([
    property({ defaultValue: DisplayType.desktop, type: DisplayType })
], Pagination.prototype, "display", void 0);
__decorate([
    property({ defaultValue: false, type: Boolean })
], Pagination.prototype, "absoluteNavigation", void 0);
__decorate([
    property({ validator: Integer, defaultValue: 0 })
], Pagination.prototype, "_currentPageIndex", void 0);
__decorate([
    property({ type: String })
], Pagination.prototype, "_direction", void 0);
Pagination = Pagination_1 = __decorate([
    customElement({
        tag: "udex-pagination",
        renderer: litRender,
        styles: PaginationCss,
        template: PaginationTemplate,
    })
    /**
     * Fires when pagination item was clicked.
     *
     * @allowPreventDefault
     * @param {Number}
     * @public
     */
    ,
    event("change", {
        detail: {
            currentPage: { type: Number },
        },
    })
], Pagination);
Pagination.define();
export default Pagination;
//# sourceMappingURL=Pagination.js.map